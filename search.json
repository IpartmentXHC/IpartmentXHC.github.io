[{"title":"hello","url":"/2022/07/11/hello/","content":"简介这是我的正式的第一篇blog hexo艹\n","categories":["闲话","blog建设"],"tags":["hexo keep"]},{"title":"金三胖","url":"/2022/07/11/%E9%87%91%E4%B8%89%E8%83%96/","content":"解压打开是GIF 动图\n用stegsolve打开\n\n逐帧逐帧看\n\n\n\n可得flag\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"二维码","url":"/2022/07/11/%E4%BA%8C%E7%BB%B4%E7%A0%81/","content":"#解压打开发现是张二维码图片 用QR Research 探查一下\n\n没有什么东西\n打开kali 用binwalk 探查一下 藏了一个压缩包 \n用010 打开观察加密信息 不是伪加密 \n试了试二维码的内容secret is here\n也不对 那只能爆破了\n\n\n解压得flag\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"你竟然赶我走","url":"/2022/07/11/%E4%BD%A0%E7%AB%9F%E7%84%B6%E8%B5%B6%E6%88%91%E8%B5%B0/","content":"#只有一张JGP图片 猜是图片隐写\n用010打开\n\n图片结尾藏了flag\n\n因为JPG这种图片文件读到 FF D9（文件尾）就不会在读了 因此可以在文件尾添加东西不影响图片的显示\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"typora-picgo-github三者联动实现自动上传图片","url":"/2022/07/12/typora-picgo-github%E4%B8%89%E8%80%85%E8%81%94%E5%8A%A8%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/","content":"利用github存储代码和图片 typora编写blog picgo上传图片终于经过俩天的踩坑 终于建立一套方便的博客上传系统\n一、GitHub图床仓库的建立和配置1、创建GitHub图床仓库\n创建GitHub账号 不会的话 上网搜 教程很多\n\n新建GitHub仓库\n\n\n2、获取GitHub的token\n点击头像进入settings\n\n\n进入开发者选项\n\n\n生成新的token\n\n\n\n注意保存token 它只会出现一次 错过了只能重新生成\n\n\n\n\n\n\n\n\n\n\n二、PicGo的安装和配置1、PicGo的下载进入PicGo的官网下载\n\nhttps://github.com/Molunerfinn/PicGo/releases\n\n\n2、PicGo的配置\n进入图床设置 选择GitHub 如图填入信息\n\n设定仓库名 填写 用户名&#x2F;仓库名\n\n分支 默认master\n\n设定token 填入刚刚保存的token\n\n后面两项可以暂时不填\n\n点击确定\n\n\n进入picgo设置 建议打开时间戳重命名\n\n\n\n三、typora的设置1、下载typora\nTypora 官方中文站 (typoraio.cn)\n\n2、typora的相关设置\n点击文件进入偏好设置\n\n\n\n\n关联成功后即可开始使用\n\n","categories":["闲话","blog建设"]},{"title":"N种方法解决","url":"/2022/07/12/N%E7%A7%8D%E6%96%B9%E6%B3%95%E8%A7%A3%E5%86%B3/","content":"解压发现是exe文件 运行不了\n用exeinfo PE侦测一下\n\nbase64&#x2F;32 加密文件 用010打开\n\n将base64加密的密文复制\niVBORw0KGgoAAAANSUhEUgAAAIUAAACFCAYAAAB12js8AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAArZSURBVHhe7ZKBitxIFgTv/396Tx564G1UouicKg19hwPCDcrMJ9m7/7n45zfdxe5Z3sJ7prHbf9rXO3P4lLvYPctbeM80dvtP+3pnDp9yF7tneQvvmcZu/2lf78zhU+5i9yxv4T3T2O0/7eud68OT2H3LCft0l/ae9ZlTo+23pPvX7/rwJHbfcsI+3aW9Z33m1Gj7Len+9bs+PIndt5ywT3dp71mfOTXafku6f/2uD09i9y0n7NNd2nvWZ06Ntt+S7l+/68MJc5O0OSWpcyexnFjfcsI+JW1ukpRfv+vDCXOTtDklqXMnsZxY33LCPiVtbpKUX7/rwwlzk7Q5JalzJ7GcWN9ywj4lbW6SlF+/68MJc5O0OSWpcyexnFjfcsI+JW1ukpRfv+vDCXOTWE7a/i72PstJ2zfsHnOTpPz6XR9OmJvEctL2d7H3WU7avmH3mJsk5dfv+nDC3CSWk7a/i73PctL2DbvH3CQpv37XhxPmJrGctP1d7H2Wk7Zv2D3mJkn59bs+nDA3ieWEfdNImylJnelp7H6bmyTl1+/6cMLcJJYT9k0jbaYkdaansfttbpKUX7/rwwlzk1hO2DeNtJmS1Jmexu63uUlSfv2uDyfMTWI5Yd800mZKUmd6Grvf5iZJ+fW7PjzJ7v12b33LSdtvsfuW75LuX7/rw5Ps3m/31rectP0Wu2/5Lun+9bs+PMnu/XZvfctJ22+x+5bvku5fv+vDk+zeb/fWt5y0/Ra7b/ku6f71+++HT0v+5l3+tK935vApyd+8y5/29c4cPiX5m3f5077emcOnJH/zLn/ar3d+/flBpI+cMDeNtJkSywn79BP5uK+yfzTmppE2U2I5YZ9+Ih/3VfaPxtw00mZKLCfs00/k477K/tGYm0baTInlhH36iSxflT78TpI605bdPbF7lhvct54mvWOaWJ6m4Z0kdaYtu3ti9yw3uG89TXrHNLE8TcM7SepMW3b3xO5ZbnDfepr0jmlieZqGd5LUmbbs7onds9zgvvU06R3TxPXcSxPrW07YpyR1pqTNKUmdKUmdk5LUaXzdWB/eYX3LCfuUpM6UtDklqTMlqXNSkjqNrxvrwzusbzlhn5LUmZI2pyR1piR1TkpSp/F1Y314h/UtJ+xTkjpT0uaUpM6UpM5JSeo0ft34+vOGNLqDfUosN7inhvUtJ+ybRtpMd0n39Goa3cE+JZYb3FPD+pYT9k0jbaa7pHt6NY3uYJ8Syw3uqWF9ywn7ppE2013SPb2aRnewT4nlBvfUsL7lhH3TSJvpLunecjWV7mCftqQbjSR1puR03tqSbkx/wrJqj7JPW9KNRpI6U3I6b21JN6Y/YVm1R9mnLelGI0mdKTmdt7akG9OfsKzao+zTlnSjkaTOlJzOW1vSjelPWFbp8NRImylJnWnL7r6F7zN3STcb32FppUNTI22mJHWmLbv7Fr7P3CXdbHyHpZUOTY20mZLUmbbs7lv4PnOXdLPxHZZWOjQ10mZKUmfasrtv4fvMXdLNxndYWunQlFhutHv2W42n+4bds7wl3VuuskSJ5Ua7Z7/VeLpv2D3LW9K95SpLlFhutHv2W42n+4bds7wl3VuuskSJ5Ua7Z7/VeLpv2D3LW9K97avp6GQ334X3KWlz+tukb5j+hO2/hX3Ebr4L71PS5vS3Sd8w/Qnbfwv7iN18F96npM3pb5O+YfoTtv8W9hG7+S68T0mb098mfcP0Jxz/W+x+FPethvUtN2y/m7fwnvm1+frzIOklDdy3Gta33LD9bt7Ce+bX5uvPg6SXNHDfaljfcsP2u3kL75lfm68/D5Je0sB9q2F9yw3b7+YtvGd+bb7+vCEN7ySpMzXSZrqL3bOcsN9Kns4T2uJRk6TO1Eib6S52z3LCfit5Ok9oi0dNkjpTI22mu9g9ywn7reTpPKEtHjVJ6kyNtJnuYvcsJ+y3kqfzxNLiEUosJ+xTYvkudt9yg3tqpM2d5Cf50mKJEssJ+5RYvovdt9zgnhppcyf5Sb60WKLEcsI+JZbvYvctN7inRtrcSX6SLy2WKLGcsE+J5bvYfcsN7qmRNneSn+RLK5UmbW4Sywn7lOzmhH3a0u7ZN99hadmRNjeJ5YR9SnZzwj5taffsm++wtOxIm5vEcsI+Jbs5YZ+2tHv2zXdYWnakzU1iOWGfkt2csE9b2j375jtcvTz+tuX0vrXF9sxNkjrTT+T6rvyx37ac3re22J65SVJn+olc35U/9tuW0/vWFtszN0nqTD+R67vyx37bcnrf2mJ75iZJneknUn+V/aWYUyNtpqTNqZE2UyNtGlvSjTsT9VvtKHNqpM2UtDk10mZqpE1jS7pxZ6J+qx1lTo20mZI2p0baTI20aWxJN+5M1G+1o8ypkTZT0ubUSJupkTaNLenGnYnl6TujO2zP3DTSZkp2c8L+0xppM32HpfWTIxPbMzeNtJmS3Zyw/7RG2kzfYWn95MjE9sxNI22mZDcn7D+tkTbTd1haPzkysT1z00ibKdnNCftPa6TN9B2uXh5/S9rcbEk37jR2+5SkzpSkzo4kdaavTg6/JW1utqQbdxq7fUpSZ0pSZ0eSOtNXJ4ffkjY3W9KNO43dPiWpMyWpsyNJnemrk8NvSZubLenGncZun5LUmZLU2ZGkzvTVWR/e0faJ7Xdzw/bMKbGc7PbNE1x3uqNtn9h+Nzdsz5wSy8lu3zzBdac72vaJ7Xdzw/bMKbGc7PbNE1x3uqNtn9h+Nzdsz5wSy8lu3zzBcsVewpyS1LmTWG7Y3nLCPm1JN05KLP/D8tRGzClJnTuJ5YbtLSfs05Z046TE8j8sT23EnJLUuZNYbtjecsI+bUk3Tkos/8Py1EbMKUmdO4nlhu0tJ+zTlnTjpMTyP/R/i8PwI//fJZYb3Jvv8Pd/il+WWG5wb77D3/8pflliucG9+Q5//6f4ZYnlBvfmO1y9PH7KFttbfhq+zySpMyVtbr7D1cvjp2yxveWn4ftMkjpT0ubmO1y9PH7KFttbfhq+zySpMyVtbr7D1cvjp2yxveWn4ftMkjpT0ubmO1y9ftRg9y0n7FPD+paTtk9O71sT13Mv7WD3LSfsU8P6lpO2T07vWxPXcy/tYPctJ+xTw/qWk7ZPTu9bE9dzL+1g9y0n7FPD+paTtk9O71sT1/P7EnOTWG5wb5LUmRptn3D/6b6+eX04YW4Syw3uTZI6U6PtE+4/3dc3rw8nzE1iucG9SVJnarR9wv2n+/rm9eGEuUksN7g3SepMjbZPuP90X9+8PpwwN0mb72pYfzcn1rf8NHwffXXWhxPmJmnzXQ3r7+bE+pafhu+jr876cMLcJG2+q2H93ZxY3/LT8H301VkfTpibpM13Nay/mxPrW34avo++OuvDCXOT7OZGu7e+5YT9XYnlhH36DlfvfsTcJLu50e6tbzlhf1diOWGfvsPVux8xN8lubrR761tO2N+VWE7Yp+9w9e5HzE2ymxvt3vqWE/Z3JZYT9uk7XL1+1GD3LX8avt8klhu2t5yc6F+/68OT2H3Ln4bvN4nlhu0tJyf61+/68CR23/Kn4ftNYrlhe8vJif71uz48id23/Gn4fpNYbtjecnKif/3+++HTnub0fd4zieUtvLfrO1y9PH7K05y+z3smsbyF93Z9h6uXx095mtP3ec8klrfw3q7vcPXy+ClPc/o+75nE8hbe2/Udzv9X+sv/OP/881/SqtvcdpBh+wAAAABJRU5ErkJggg==\n\n去在线网站解码\n\n是png图片 下载下来\n是张二维码图片\n\n用QR打开\n\n得flag\n\nflag{dca57f966e4e4e31fd5b15417da63269}\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"乌镇峰会种图","url":"/2022/07/12/%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE/","content":"是一张图片 \n用stegsolve 打开 并没有发现什么\n用binwalk 探查 没有发现什么\n用010打开\n发现flag就藏在最后\n\n\nflag{97314e7864a8f62627b26f3f998c37f1}\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"基础破解","url":"/2022/07/12/%E5%9F%BA%E7%A1%80%E7%A0%B4%E8%A7%A3/","content":"题目有提示 四位数字加密\n\n用ARCHPR暴力破解一下\n\n解压得flag.txt\n\nbase64加密\n\n得flag\n\nflag{70354300a5100ba78068805661b93a5c}\n\n最后分享一张图片\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"LSB","url":"/2022/07/12/LSB/","content":"题目提示的很明显 LSB隐写\n\nLSB图片隐写\n用Stegsolve打开\n发现在 红 绿 蓝 的0通道有隐写\n\n\n\n提取一下\n\n\n文件头为PNG 说明是PNG图片\n\n\n保存一下 以  .png  结尾\n是张二维码图片\n用QR 打开\n\n得flag\n\nflag{1sb_i4_s0_Ea4y}\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"wireshark","url":"/2022/07/12/wireshark/","content":"写这题需要wireshark工具\n\nWireshark · Go Deep.\n\n用wireshark打开 抓取POST的包\n\n\n找到包后 右键追踪http流\n\n因为题目要求我们找密码 \n\n\n直接搜索 password 或者 眼力好一眼看见\n\nflag{ffb7567a1d4f4abdffdb54e022f8facd}\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"zip伪加密","url":"/2022/07/12/zip%E4%BC%AA%E5%8A%A0%E5%AF%86/","content":"zip伪加密的原理参考这篇博客\n\nctf伪加密\n\n用010打开\n\n按blog所说应是真加密\n\n但题目直言是伪加密 只好硬着头皮改\n\n改完后 解压就不需要密码了\n\n\nflag{Adm1N-B2G-kU-SZIP}\n\n\n一般情况下伪加密只有局部加密为00 09 全局为00 00\n\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"文件中的秘密","url":"/2022/07/12/%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E7%A7%98%E5%AF%86/","content":"一张 路飞 的图片\n\n各种方法都试了一下 没有发现什么\n最后在图片属性 详细信息中找到flag\n\n\nflag{870c5a72806115cb5439345d8b014396}\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"被嗅探的流量","url":"/2022/07/12/%E8%A2%AB%E5%97%85%E6%8E%A2%E7%9A%84%E6%B5%81%E9%87%8F/","content":"用wireshark 打开\nTCP简介\n\n追踪TCP流\n直接查找flag\n\n\nflag{da73d88936010da1eeeb36e945ec4b97}\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"镜子里面的世界","url":"/2022/07/12/%E9%95%9C%E5%AD%90%E9%87%8C%E9%9D%A2%E7%9A%84%E4%B8%96%E7%95%8C/","content":"LSB隐写 用stegsolve 打开\n在红 绿 蓝 0通道 有隐写\n\n\n\n提取一下发现flag\n\n\nflag{st3g0_saurus_wr3cks}\n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"网鼎杯-2020-青龙组-jocker","url":"/2022/07/13/%E9%9D%92%E9%BE%99%E7%BB%84-jocker/","content":"观察程序用PE 探查一下\n\n是32位程序 无壳 用IDA 打开\n这里如果你IDA版本较高 可以直接F5生成伪代码\n此时版本为 IDA Pro 7.7\n\n但是有些较低的不行 所以我讲一下 无法直接F5的情况\n 这里无法生成伪代码是因为 栈不平衡\n勾选上 栈指针  Options-&gt;Generral-&gt;Stack pointer\n\n就可以看到栈指针的情况了\n\n有两处栈不平衡情况\n\ntips：在call函数最后 retn指令会使得栈指针恢复被调用前的数值 \n\n使用快捷键 Alt + k 修改新旧sp指针的差值为0\n修改第一处：\n \n\n修改第二处：\n\n\nF5查看伪代码\n看到一个VirtualProtect函数 没有遇到过 查一下\n\n\n VirtualProtect函数__virtualprotectex\n\n是一个加密函数 加密encrypt函数 暂时还用不到 跳过\n\n有两个函数 wrong 和 omg 使用了 str\nwrong:\nchar *__cdecl wrong(char *a1)&#123;  char *result; // eax  int i; // [esp+Ch] [ebp-4h]  for ( i = 0; i &lt;= 23; ++i )  &#123;    result = &amp;a1[i];    if ( (i &amp; 1) != 0 )      a1[i] -= i;    else      a1[i] ^= i;  &#125;  return result;\n\nomg:\nint __cdecl omg(char *a1)&#123;  int v2[24]; // [esp+18h] [ebp-80h] BYREF  int i; // [esp+78h] [ebp-20h]  int v4; // [esp+7Ch] [ebp-1Ch]  v4 = 1;  qmemcpy(v2, &amp;byte_4030C0, sizeof(v2));  for ( i = 0; i &lt;= 23; ++i )  &#123;    if ( a1[i] != v2[i] )      v4 = 0;  &#125;  if ( v4 == 1 )    return puts(&quot;hahahaha_do_you_find_me?&quot;);  else    return puts(&quot;wrong ~~ But seems a little program&quot;);&#125;\n\n写一下脚本\n\n错的flag 题目没有那么简单\n再往后看\n\n有个for循环 循环了187次 有点像在还原程序\n\nencrypt函数打不开 报错 查看汇编代码 大多还是数据 基本上确定了for循环在进行解密\n动态调试 去壳这里用x32debug 动态调试\n\n一步一步调试 找到主函数下的for循环\n按下F4 运行到for循环的下一步 \n按下F7进入encrypt函数内部\n\n\n有正确的汇编代码\n将解密完的程序dump 出来\n\n\n将dump出的新程序拖进IDA \n\n入口变成了 start 这是dump程序默认更改的 点击start函数名 按X查看调用 易找到原来的main函数\n\n还原的encrypt函数\nint __cdecl start(int a1)&#123;  int v2[19]; // [esp+1Ch] [ebp-6Ch] BYREF  int v3; // [esp+68h] [ebp-20h]  int i; // [esp+6Ch] [ebp-1Ch]  v3 = 1;  qmemcpy(v2, &amp;unk_403040, sizeof(v2));  for ( i = 0; i &lt;= 18; ++i )  &#123;    if ( (char)(*(_BYTE *)(i + a1) ^ aHahahahaDoYouF[i]) != v2[i] )    &#123;      puts(&quot;wrong ~&quot;);      v3 = 0;      exit(0);    &#125;  &#125;  puts(&quot;come here&quot;);  return v3;&#125;\n\n还原的finally函数\nint __cdecl sub_40159A(int a1)&#123;  unsigned int v1; // eax  char v3[9]; // [esp+13h] [ebp-15h] BYREF  int v4; // [esp+1Ch] [ebp-Ch]  strcpy(v3, &quot;%tp&amp;:&quot;);  v1 = time(0);  srand(v1);  v4 = rand() % 100;  v3[6] = 0;  *(_WORD *)&amp;v3[7] = 0;  if ( (v3[(unsigned __int8)v3[5]] != *(_BYTE *)((unsigned __int8)v3[5] + a1)) == v4 )    return puts(&quot;Really??? Did you find it?OMG!!!&quot;);  else    return puts(&quot;I hide the last part, you will not succeed!!!&quot;);&#125;\n\nencrypt函数加密思路将a1的前19为与“hahahaha_do_you_find_me?”异或 其中a1就是我们的输入字符串\n\nfinally函数的加密思路\n函数逻辑 看了很久不是很懂 再加上 还有随机数的干扰 这里就无法猜出它的解密方法 \n只能退一步 猜还是利用了encrypt函数的异或\n因为 flag{…..} 最后一个必定是** }**  可以知道是 71 与 ”:” 异或 \n进一步猜 前四字符都是 和 71异或\n解密脚本store = [0x0E,    0x0D,    0x09,         0x06,    0x13,         0x05,    0x58,    0x56, 0x3E,    0x06,  0x0C,  0x3C,    0x1F,   0x57,    0x14,  0x6B,    0x57,    0x59, 0x0D]key = [0x68, 0x61, 0x68, 0x61, 0x68, 0x61, 0x68, 0x61, 0x5F, 0x64,       0x6F, 0x5F, 0x79, 0x6F, 0x75, 0x5F, 0x66, 0x69, 0x6E, 0x64,       0x5F, 0x6D, 0x65, 0x3F]input1 = []for i in range(len(store)):    input1.append(store[i] ^ key[i])    print(chr(input1[i]), end=&quot;&quot;)key2 = [37, 116, 112, 38, 58]for i in range(len(key2)):    print(chr(key2[i] ^ 71), end=&quot;&quot;)#flag&#123;d07abccf8a410cb37a&#125;\n\n\n参考WP:[(60条消息) 网鼎杯 2020 青龙组]jocker（详解）_ST4RBOY的博客-CSDN博客_网鼎杯jocker\n\n","categories":["刷题记录","BUUCTF","re"]},{"title":"GWCTF-2019-re3","url":"/2022/07/18/GWCTF-2019-re3/","content":"看题目PE查壳\n无壳64位的linux程序 \n用IDA打开找到main函数\n\n接受一个 32位的 字符串\n存在一个mprotect 函数 紧接着一个大循环 猜测是加密后解密\n\n查看汇编窗口 果然如此\n\n因为是Linux程序 本人暂时不知道如何利用动态调试去“去除“这个函数的”壳“\n去壳只能利用IDC脚本静态”去壳“ \n\nshift + F2 就可以调出脚本编辑器 输入脚本后点击Run 即可 \n#include &lt;idc.idc&gt;static main()&#123;    auto addr = 0x402219;    auto i = 0;    for(i=0;i&lt;224;i++)    &#123;        PatchByte(addr+i,Byte(addr+i)^0x99);    &#125;&#125;\n\n\n\n\n仔细观看这些函数 都是一些比较复杂的 用findcrypt 插件(需要自行下载)\n\nsub_40207B函数\n其中sub_401CF9是MD5加密函数 \na1是函数导入的参数 我们盯着 a1看\na1只和V2产生联系\n\n\n按理说：只要将base64的码表 MD5加密俩次就可以获得 a1的值了 但是事实并非如此 其中的原因 本人暂时还不知 只能利用动调得到unk_603170\n\n\nCB8D493521B47A4CC1AE7E62229266CE\n\n\n\nsub_40221A函数由findcrypt插件可知此函数中存在AES加密\n\nbyte_6030A0中存放的就是A1最后AES加密出的密文 \nBC0AADC0147C5ECCE0B140BC9C51D52B46B2B9434DE5324BAD7FB4B39CDB4B5B\n\n其中unk_603170就是我们AES中的密钥\n写脚本from Crypto.Cipher import AESfrom Crypto.Util.number import *password = long_to_bytes(0xCB8D493521B47A4CC1AE7E62229266CE)aes = AES.new(password,mode=AES.MODE_ECB) en_text = long_to_bytes(0xBC0AADC0147C5ECCE0B140BC9C51D52B46B2B9434DE5324BAD7FB4B39CDB4B5B)den_text = aes.decrypt(en_text) print((den_text))\n\n\nflag{924a9ab2163d390410d0a1f670}\n\n","categories":["刷题记录","BUUCTF","re"]},{"title":"java学习总结","url":"/2022/07/19/java%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/","content":"Java开发入门Java概述略\nJava开发环境搭建略\nJava运行机制Java程序运行时，要经过编译和运行两个步骤\n\n首先采用通用的java编译器将java源程序编译成为与平台无关的字节码文件（class文件）\n然后由java虚拟机（JVM）对字节码文件解释执行。\n\n\n编译后的.class文件可以通过不同版本的JVM，直接在相应的操作系统中运行。\n\nJava编程基础Java程序的组成要素标识符略\n关键字略\n注释略\n数据类型略\n常量略\n变量略\n数据的标准输入、输出通过键盘输入数据通过Scanner类来实现键盘的数据输入\n\n引用Scanner所在的包：import java.util.Scanner;\n\n定义Scanner对象：Scanner input &#x3D;new Scanner(System.in);其中对象名（input）由程序员自定义，systeam.in 表示输入设备——键盘\n\n通过输入对象调用相应的方法接受相应类型的数据。\n\n\n\n格式\n接受数据类型\n\n\n\ninput.nextByte()\n接受一个byte型数据\n\n\ninput.nextInt()\n接受一个int型数据\n\n\ninput.nextShort()\n接受一个short型数据\n\n\ninput.nextLong()\n接受一个long型数据\n\n\ninput.nextFloat()\n接受一个float型数据\n\n\ninput.nextDouble()\n接受一个double型数据\n\n\ninput.nextLine()\n接受一个string型数据\n\n\n\n\n代码演示:\nScanner input =new Scanner(Systen.in);int a =input.newInt();\n\n显示屏输出数据常见方法：\n\n\n\n方法\n特点\n\n\n\nSysteam.ou.print(字符串)\n显示字符串内容 不换行\n\n\nSysteam.out.println(字符串)\n显示字符串内容，有换行\n\n\nSysteam.ou.printf(“字符串”,变量列表)\n与C语言相同，按格式显示字符串内容\n\n\n\n字符串可以是单个字符串，可以是其他变量，也可以是字符串和其他变量通过加号“+”拼接成的字符串。\n\n运算符和表达式略\n选择结构语句if语句略\nswitch语句略\n循环结构语句while循环略\ndo…while循环略\nfor循环略\n循环嵌套略\n跳转语句略\n方法方法的定义Java中的方法类似于C语言中的函数 但方法又有不同的含义。\nJava中的方法是类的动态属性，表示类具有的功能和行为，用来进行对象之间的信息传递。并且所有的方法必须再类中定义。\n方法定义格式：\n[修饰符]返回值类型 方法名(形参 1 ，形参 2，....)&#123;\t//方法体\treturn 返回值&#125;\n\n修饰符有俩种：\n\n访问权限：public \tprotected \tprivate\t (默认)\n\n描述方法：\nstatic:静态修饰符abstract:抽象修饰符final:最终修饰符\n\n\n方法的调用方法调用时，注意：\n\n形参和实参特征匹配：参数个数 参数的数据类型\n参数的传递包括传值的传址传值时：形参的变化不改变实参传址时：形参的值会改变实参的值\n如果方法有返回值利用return，获取方法的返回值\n\n方法的重载方法重载的定义：\n​\t在同一个作用于内，方法名相同，参数特征不同(参数的个数或参数的类型不同)的一系列方法\n方法重载的调用机制\n\n匹配方法名\n匹配参数特征\n\n数组一维数组数组的声明\n数组类型 数组名称 [ ]\n数组类型 [ ] 数组名称\n\n数组类型可以是 基本数据类型或引用数据类型\n[ ] 是数组的标志 可以放在数组名称后面 以可以放在前面\n创建数组声明数组只是定义一个数组，并没有开辟储存空间，需通过创建数组才能为数组开辟指定长度的储存空间。\n\n数组名称 &#x3D; new 数组类型 [数组长度]\n\n数组访问略\n数组初始化略\n二维数组略\n类与对象类类的定义类是对象的抽象，它用于描述一组对象的共同特征和行为。\n类中可以定义成员变量和成员方法。\n\n成员变量用于描述对象的特征，也被称作属性\n成员方法用于描述对象的行为，可简称为方法\n\n类的定义格式为\n[类修饰符] class ClassName&#123;//成员变量定义//成员方法定义&#125;\n\n类修饰符有：public abstract final (默认空)\n\n注意：\n\n当类修饰符为public时，表示该类为公共类，类名必须于文件名相同，且一个Java文件中只能包含一个公共类，但可包含多个非公共类。\n类名的各个单词首字母都要大写；成员变量名，成员方法名称第一个字母小写，其他单词首字母都大写。\n\n\n成员变量定义格式：\n\n[修饰符] 数据类型 成员变量名称\n\n赋初始值：\n\n声明时直接给定初始值\n如果没有明确指定变量初始值，由系统给定默认的初始变量\n通过构造方法给成员变量赋值\n\n\n系统不会为局部变量设置初始值\n\n成员方法定义格式：\n[修饰符] 返回数据类型 方法名(形参列表)&#123;//方法体&#125;\n\n\n与普通方法基本相同\n\n对象的声明、实例化程序要完成具体的功能，需要通过实例化对象调用类成员来实现。\n在使用对象前，需声明对象，然后为该对象创建创建储存空间，为成员变量给定初始值。\n具体格式为：\n\n类名 对象名称；对象名称 &#x3D; new 类名(实参列表)；\n\n简化版：\n\n类名 对象名称  &#x3D; new 类名(实参列表)；\n\n类成员的访问在类内自身的成员变量和成员方法可以直接访问，而在类外一般通过类对象来访问。\n具体格式为：\n\n对象名.成员变量;\n对象名.成员方法;\n\n类的封装性\n\npublic\t     允许在类外且项目内任何地方访问\n默认            允许在类外且包内的任何地方访问\nprotected  允许在类外且子类内的任何地方访问\nprivate       只允许在类内访问\n\n构造方法构造方法的定义构造方法是类的一种特殊方法，主要作用是在创建对象的同时，初始化类的实例对象。\n构造方法必须满足如下两个条件：\n\n构造方法的方法名必须与类名相同\n构造方法没有返回值，因此方法同定义不需要返回类型修饰符，void也不需要，且方法体中不能用return。\n\n\n构造方法具有方法的共性，但也有特殊之处：\n\n构造方法的方法名必须与类名相同\n构造方法没有返回值，因此方法头定义不需要返回类型修饰符\n构造方法的一般作用是对对象成员的初始化\n构造方法在用户创建对象时，由系统自动调用进行初始化\n构造方法的修饰符只能为访问修饰符\n\n\n类中系统默认给定无参构造方法\n\n构造方法的重载略\nThis关键字具体用法：\n\n在类方法中调用对象成员时，系统默认在对象成员前加上this，表示访问的是当前对象成员 即成员变量或对象方法\n通过this关键字可以明确访问类成员，解决于局部变量名称冲突问题\n当需要在构造方法中调用另一个构造方法时，可以通过执行“this([实参1 实参2 …])”来实现\n\n对象数组对象数组的声明和创建\n声明和创建数组类名 [] 数组名 &#x3D;new 类名[n];\n创建对象储存空间数组名[i] &#x3D;new 类名([实参列表])\n\n数组对象的访问格式为：\n数组名[i].成员；\n子对象子对象定义：\n所谓子对象，就是一个类对象作为另一个类的成员\n类与类之间利用关系类与类之间的关系有：\n\n包含关系\n利用关系\n继承关系\n\nstatic关键字静态成员变量使用static关键字修饰得成员变量，称之为静态成员变量\n格式为：\n\n[修饰符] static 数据类型 变量名；\n\n静态成员变量和一般成员变量区别：\n\n归属及内存分配空间不同一般成员变量是属于对象得，即只有创建了对象后，一般成员变量才存在，且其内存分配空间于各自得对象相关。静态成员变量是属于类的，即在装载类定义代码时，系统为静态成员变量分配得独立得储存空间，所有属于这个类得对象都共享这个储存空间\n\n调用方法不同静态成员变量时属于类得，但也可以看作对象得成员变量，所以静态成员变量除了可以作为一般成员变量通过对象调用外，还可以通过类名来调用类名.成员变量名对象名.成员变量名\n\n\n静态成员方法使用static修饰的成员方法，就是静态成员方法。\n静态成员方法也属于类，在装载了类定义代码后，就可以通过类来调用静态成员方法。同样，也可以利用对象来调用静态成员方法\n调用格式：类名.成员方法([实参列表])\n对象名.成员方法([实参列表])\n静态代码块载Java类中，使用一大对大括号括起来的若干行代码称之为一个代码块，用static关键字修饰的代码块被称之为静态代码块。\n当类被加载时，静态代码块会被执行。由于类只加载一次，因此静态代码块只被执行一次。\n静态代码块常用于进行初始化。\n继承和多态类的继承继承的概念在Java中类的继承是指在一个现有类的基础上去构建一个新的类，构建出来的新类称之为子类（派生类），现有类称之为父类（超类、基类）。\n类的继承具有传递性，即子类还可以派生子类，最终形成一个类层次结构。\n按照继承的方式的不同，继承可以分为直接继承和间接继承。\n直接继承是由父类直接派生出子类，间接继承是由父类派生出的子类的子类。\n继承的定义想声明一个类继承另一个类，需要使用extends关键字\n具体格式为：\n[修饰符]class 子类名 extends 父类名&#123;//类体&#125;\n\n\njava中 一个子类只能继承一个父类，即单继承。\n子类自动继承父类中除了构造方法外的所有属性和方法。\n\n方法的重载和覆盖（重写）在继承关系中，当子类中的声明的成员方法与父类中某个成员方法名字相同但参数特征不同时，也称方法重载。\n当子类中声明的成员方法与父类中某个成员方法原型相同时，子类方法会覆盖父类方法，也称子类重写了父类方法。\nsuper关键字当子类重写了父类方法后，子类方法会覆盖子类父类的相应方法，使得无法访问父类被重写的方法。\nsuper关键字就可以解决这个问题。\n可以通过super关键字来访问父类的成员变量，成员方法，构造方法。\nsuper关键字的具体格式为：\nsuper.成员变量\nsuper.成员方法([实参 1 ，实参 2 …])\n构造方法在继承关系中，当创建子类对象时，不但会调用子类构造方法，还会调用父类构造方法。\n调用机制：\n\n创建子类对象时，系统自动调用父类后，在调用子类构造方法。\n调用顺序是，首先在子类中找到匹配的构造方法，并进入方法体，调用父类构造方法，然后返回执行子类构造方法后续语句。\n调用父类构造方法时，如果子类构造方法中没有显式调用或显式调用语句，则默认调用父类的无参构造方法。\n显式调用语句“super( )”或”super(实参1，实参2…)”必须放在子类构造方法体的最前面。\n\n多态多态的定义多态性是指对于同一消息，不同类的对象做出的不同反应的现象。\n是指不同类的对象调用同一个方法名的成员方法时，执行不同代码段的现象。\n要实现多态性，需具备：\n\n声明父类的引用，让父类引用指向子类存储空间，通过父类的引用的调用方法。\n要调用的方法必须包含在父类和子类中。\n\n抽象类抽象的定义随着抽象层次的不断加深，可能会出现抽象概念类，由于这些类是抽象的，所以有的方法不能具体实现。\n抽象方法和抽象类的定义格式：\nabstract class 抽象类名&#123;//成员变量的声明[修饰符] abstract 返回值类型 方法名([参数列表]);\t//抽象方法定义&#125;\n\n\n抽象类本身不能被实例化的类，只能作为其他类的父类。\n子类必须实现父类的抽象方法，否则子类不能实例化对象。\n\n接口接口的定义接口用关键字interface修饰，包括成员变量和成员方法。\n成员变量为常量 默认使用 public static final 修饰 允许进行一次且仅一次的赋值。\n成员方法全部为抽象方法，默认使用关键字 public abstract 修饰\n具体定义为：\n[public] interface 接口名&#123;    //成员变量的声明，修饰符(public static final) 可省    变量类型 变量名称 = 常量值;    //抽象方法的声明，修饰符(public abstract)可省    返回值类型 方法名(形参1 ，形参2 ....);&#125;\n\n接口的实现接口中的成员方法只能定义为抽象类，它本身不能提供方法的实现。\n接口中的抽象方法是通过引用接口的类实现的，如果某个类要引用某个接口，需要在类定义时使用implement来声明引用接口\n接口格式为：\nclass 类名 implement 接口1，接口2，接口3....&#123; \t//成员变量的定义    //成员方法的定义 \t//接口中所有的抽象方法的重写 &#125;\n\n\n一个类只能直接继承一个父类，但可以同时引用多个接口。\n\n包包的定义Java中的类文件都是通过包来进行管理的。\n\n包的声明语句必须放在Java源文件的最前面。\n包的名字一般为小写，用圆点操作符( . )指明包的层次。\n\n包间访问\n前缀包名发再要引用的类名前面添加这个类名所属的包名，包和引用的类之间使用圆点操作符连接max.IntgerMax.getMax(1,2)  访问max 中的IntegerMax类成员\n使用引用包语句(import)使用引用包语句也可以直接将其他包中的类加载到程序中，这样使用时不需要加上包名引用了实现语法：**import 包名.类名 **\t\t\t\t引用具体某个包*import 包名. **\t\t\t\t\t  将整个包装载\n\n\n\n","categories":["知识总结","Java"]},{"title":"我的第一行Android代码.Android学习.01","url":"/2022/07/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E8%A1%8CAndroid%E4%BB%A3%E7%A0%81-Android%E5%AD%A6%E4%B9%A0-01/","content":"Android系统架构Android 大致可以分为四层架构：Linux 内核层、系统运行库层、应用框架层和应用层。\n\nLinux 内核层   Android 系统是基于 Linux 内核的，这一层为 Android 设备的各种硬件提供了底层的驱动，如 显示驱动、音频驱动、照相机驱动、蓝牙驱动、Wi-Fi 驱动、电源管理等\n系统运行库层这一层通过一些 C&#x2F;C++库来为 Android 系统提供了主要的特性支持。同样在这一层还有 Android 运行时库，它主要提供了一些核心库，能够允许开发者使用 Java 语言来编写 Android 应用。另外，Android 运行时库中还包含了 Dalvik 虚拟机（5.0 系统之后改为 ART 运行环境），它使得每一个 Android 应用都能运行在独立的进程当中，并且拥有一个自己的 Dalvik 虚拟机实例。相较于 Java 虚拟机，Dalvik 是专门为移动设备定制的，它针对手机内存、 CPU 性能有限等情况做了优化处理。\n应用框架层这一层主要提供了构建应用程序时可能用到的各种 API，Android 自带的一些核心应用就是 使用这些 API 完成的，开发者也可以通过使用这些 API 来构建自己的应用程序。\n应用层所有安装在手机上的应用程序都是属于这一层的，比如系统自带的联系人、短信等程序，或 者是你从 Google Play 上下载的小游戏，当然还包括你自己开发的程序。\n\n准备工具\nJDK。JDK 是 Java 语言的软件开发工具包，它包含了 Java 的运行环境、工具集合、基础 类库等内容。\nAndroid SDK。Android SDK 是谷歌提供的 Android 开发工具包，在开发 Android 程序时， 我们需要通过引入该工具包，来使用 Android 相关的 API。\nAndroid Studio。Android Studio 在开发 Android 程序方面要远比 Eclipse 强 大和方便得多。\n\n分析Android程序项目结构这里我们将项目结构模式切换成 Project。\n观察整个结构目录的内容：\n\n.gradle和.idea这两个目录下放置的都是 Android Studio 自动生成的一些文件，我们无须关心，也不要去手动编辑。\napp项目中的代码、资源等内容几乎都是放置在这个目录下的，我们后面的开发工作也基本都是 在这个目录下进行的，待会儿还会对这个目录单独展开进行讲解。\ngradle   这个目录下包含了gradle wrapper的配置文件，使用gradle wrapper的方式不需要提前将gradle 下载好，而是会自动根据本地的缓存情况决定是否需要联网下载 gradle。\n.gitignore   这个文件是用来将指定的目录或文件排除在版本控制之外的。\nbuild.gradle这是项目全局的 gradle 构建脚本，通常这个文件中的内容是不需要修改的。稍后我们将会详 细分析 gradle 构建脚本中的具体内容。\ngradle.properties这个文件是全局的 gradle 配置文件，在这里配置的属性将会影响到项目中所有的 gradle 编译 脚本。\ngradlew 和 gradlew.bat   这两个文件是用来在命令行界面中执行 gradle 命令的，其中 gradlew 是在 Linux 或 Mac 系统 中使用的，gradlew.bat 是在 Windows 系统中使用的。\nlocal.properties   这个文件用于指定本机中的 Android SDK 路径，通常内容都是自动生成的，我们并不需要修改。 除非你本机中的 Android SDK 位置发生了变化，那么就将这个文件中的路径改成新的位置即可。\nsettings.gradle   这个文件用于指定项目中所有引入的模块。通常情况下模块的引入都是自动完成的，需要我们手 动去修改这个文件的场景可能比较少。\n\n接下来看app目录下的内容：\n\nbuild主要也是包含了一些在编译时自动生成的文件。\nlibs如果你的项目中使用到了第三方 jar 包，就需要把这些 jar 包都放在 libs 目录下，放在这个目 录下的 jar 包都会被自动添加到构建路径里去。\nandroidTest   是用来编写 Android Test 测试用例的，可以对项目进行一些自动化测试。\njava   java 目录是放置我们所有 Java 代码的地方。\nres你在项目中使用到的所有图片、布局、字符 串等资源都要存放在这个目录下。当然这个目录下还有很多子目录，图片放在 drawable目录下，布 局放在 layout目录下，字符串放在 values目录下，所以你不用担心会把整个 res目录弄得乱糟糟的。\nAndroidManifest.xml这是你整个 Android 项目的配置文件，你在程序中定义的所有四大组件都需要在这个文件里注册，另外还可以在这个文件中给应用程序添加权限声明。\ntest此处是用来编写 Unit Test 测试用例的，是对项目进行自动化测试的另一种方式。\n.gitignore这个文件用于将 app 模块内的指定的目录或文件排除在版本控制之外，作用和外层 的.gitignore 文件类似。\nbuild.gradle这是 app 模块的 gradle 构建脚本，这个文件中会指定很多项目构建相关的配置。\nproguard-rules.pro这个文件用于指定项目代码的混淆规则，当代码开发完成后打成安装包文件，如果不希望代 码被别人破解，通常会将代码进行混淆，从而让破解者难以阅读。\n\n\nAndroid系统四大组件分别是活动（Activity）、服务（Service）、广播接收器（Broadcast Receiver） 和内容提供器（Content Provider）。\n其中活动是所有 Android 应用程序的门面，凡是在应用中你看 得到的东西，都是放在活动中的。\n而服务就比较低调了，你无法看到它，但它会一直在后台默默 地运行，即使用户退出了应用，服务仍然是可以继续运行的。\n广播接收器允许你的应用接收来自 各处的广播消息，比如电话、短信等，当然你的应用同样也可以向外发出广播消息。\n内容提供器则为应用程序之间共享数据提供了可能，比如你想要读取系统电话簿中的联系人，就需要通过内 容提供器来实现。\n\nres目录下的内容：\n\n所有以 drawable 开头的文件夹都是用来放图片的\n所有以 mipmap 开头的文件夹都是用来放应用图标的\n所有以 values 开头的文件夹都是用来放字符串、样式、颜色等配置的\nlayout 文件夹是用来放布局文件 的\n\nAndroid日志工具Log\nLog.v()。用于打印那些最为琐碎的、意义最小的日志信息。对应级别 verbose，是 Android 日志里面级别最低的一种。\nLog.d()。用于打印一些调试信息，这些信息对你调试程序和分析问题应该是有帮助的。 对应级别 debug，比 verbose 高一级。\nLog.i()。用于打印一些比较重要的数据，这些数据应该是你非常想看到的、可以帮你分 析用户行为数据。对应级别 info，比 debug 高一级。\nLog.w()。用于打印一些警告信息，提示程序在这个地方可能会有潜在的风险，最好去修 复一下这些出现警告的地方。对应级别 warn，比 info 高一级。\nLog.e()。用于打印程序中的错误信息，比如程序进入到了 catch 语句当中。当有错误信 息打印出来的时候，一般都代表你的程序出现严重问题了，必须尽快修复。对应级别 error， 比 warn 高一级。\n\nLog.d()方法中传入了两个参数：第一个参数是 tag，一般传入当前的类名就好，主要用于 对打印信息进行过滤；第二个参数是 msg，即想要打印的具体的内容。\n","categories":["知识总结","Android"]},{"title":"先从看得到的入手.Android学习.02","url":"/2022/07/26/%E5%85%88%E4%BB%8E%E7%9C%8B%E5%BE%97%E5%88%B0%E7%9A%84%E5%85%A5%E6%89%8B-Android%E5%AD%A6%E4%B9%A0-02/","content":"活动是什么​\t活动（Activity）是最容易吸引用户的地方，它是一种可以包含用户界面的组件，主要用于 和用户进行交互。一个应用程序中可以包含零个或多个活动，但不包含任何活动的应用程序很少见。\n具体操作实例Button元素这是一个最简单的Button属性设置\n\n\nandroid：id:给与Button一个名字\nandroid:layout_width 指定了当前元素的宽 度，这里使用 match_parent 表示让当前元素和父元素一样宽。\nandroid:layout_height 指定 了当前元素的高度，这里使用 wrap_content 表示当前元素的高度只要能刚好包含里面的内容就行。\nandroid:text 指定了元素中显示的文字内容。\n\n这是一个比较复杂的Button属性设置\n\n具体参考\n\n Android基础布局之ConstraintLayout_\n\nToast元素Toast 是 Android 系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息 通知给用户，这些信息会在一段时间后自动消失，并且不会占用任何屏幕空间，我们现在就尝试 一下如何在活动中使用 Toast。\n\n@Overrideprotected void onCreate(Bundle savedInstanceState) &#123;    super.onCreate(savedInstanceState);    setContentView(R.layout.activity_main);    //使用Toast弹窗 和 退出    Button button1 =findViewById(R.id.testbutton1);    button1.setOnClickListener(new View.OnClickListener() &#123;        @Override        public void onClick(View view) &#123;            Toast.makeText(MainActivity.this, &quot;玩个屁&quot;, Toast.LENGTH_SHORT).show();        &#125;    &#125;);\n\n在活动中，可以通过 findViewById()方法获取到在布局文件中定义的元素。\n我们传入R.id.testbutton1 即在layout中定义的Button的id。\n得到按钮的实例之后，我们通过调用 setOnClickListener()方法为按钮注册一个监听器， 点击按钮时就会执行监听器中的 onClick()方法。\nToast 的用法非常简单，通过静态方法 makeText()创建出一个 Toast 对象，然后调用 show() 将 Toast 显示出来就可以了。这里需要注意的是，makeText()方法需\n要传入 3 个参数。\n第一个参 数是 Context，也就是 Toast 要求的上下文，由于活动本身就是一个 Context 对象，因此这里直 接传入MainActivity.this即可。\n第二个参数是 Toast 显示的文本内容。\n第三个参数是 Toast 显示的时长，有两个内置常量可以选择 Toast.LENGTH_SHORT 和 Toast.LENGTH_LONG。\nMenu元素首先在 res 目录下新建一个 menu 文件夹\n\n名称为menu，再右击 menu 文件夹\n\n文件名输入main。\n创建完成后再main.xml中输入如下代码\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;    &lt;item        android:id=&quot;@+id/add_item&quot;        android:title=&quot;Add&quot;/&gt;    &lt;!-- id:标识符  title:指定名称 --&gt;    &lt;item        android:id=&quot;@+id/remove_item&quot;        android:title=&quot;Remove&quot;/&gt;&lt;/menu&gt;\n\n​\t这里我们创建了两个菜单项，其中标签就是用来创建具体的某一个菜单项，然后通 过 android:id 给这个菜单项指定一个唯一的标识符，通过 android:title 给这个菜单项指定 一个名称。\n随后重新回到MainActivity重写onCreateOptionsMenu()方法，重写方法可以使用 Ctrl  + O 快捷键（Mac 系统是 control + O）\n\n@Overridepublic boolean onCreateOptionsMenu(Menu menu) &#123;    getMenuInflater().inflate(R.menu.main,menu);    return true;&#125;\n\n通过 getMenuInflater()方法能够得到 MenuInflater 对象，再调用它的 inflate()方法 就可以给当前活动创建菜单了。\ninflate()方法接收两个参数，第一个参数用于指定我们通过哪 一个资源文件来创建菜单，这里当然传入 R.menu.main。第二个参数用于指定我们的菜单项将添加到哪一个 Menu 对象当中，这里直接使用 onCreateOptionsMenu()方法中传入的 menu 参数。 \n然后给这个方法返回 true，表示允许创建的菜单显示出来，如果返回了 false，创建的菜单将无法显示。\n当然，仅仅让菜单显示出来是不够的，我们定义菜单不仅是为了看的，关键是要菜单真正可 用才行，因此还要再定义菜单响应事件。在 MainActivity中重写 onOptionsItemSelected()方法：\n@Overridepublic boolean onOptionsItemSelected(@NonNull MenuItem item) &#123;    switch (item.getItemId())&#123;        case R.id.add_item:            Toast.makeText(this, &quot;充值令你变强&quot;, Toast.LENGTH_SHORT).show();            break;        case R.id.remove_item:            Toast.makeText(this,&quot;删除失败&quot;,Toast.LENGTH_SHORT).show();            break;        default:            break;    &#125;    return true;&#125;\n\n这时启动程序就会有不同\n你会发现在标题栏的右侧多了一个三点的符号，这个就是菜单按钮了\n\n点击不同的菜单按钮 就会出现不同的 Toast弹窗提示\n销毁一个活动最简单的一个方法就是按一下back键就可以销毁档前的活动。\n不过如果你不想通过按 键的方式，而是希望在程序中通过代码来销毁活动，当然也可以，Activity 类提供了一个 finish() 方法，我们在活动中调用一下这个方法就可以销毁当前活动了。\n修改按钮监听器中的代码\n@Overrideprotected void onCreate(Bundle savedInstanceState) &#123;    super.onCreate(savedInstanceState);    setContentView(R.layout.activity_main);    //使用Toast弹窗 和 退出    Button button1 =findViewById(R.id.testbutton1);    button1.setOnClickListener(new View.OnClickListener() &#123;        @Override        public void onClick(View view) &#123;            Toast.makeText(MainActivity.this, &quot;玩个屁&quot;, Toast.LENGTH_SHORT).show();            finish();//关闭程序 仍然会留在后台        &#125;    &#125;);\n\n重新运行程序，这时点击一下按钮，当前的活动就被成功销毁了，效果和按下 Back 键是一 样的。\n使用Intent在活动之间穿梭​\tIntent 是 Android 程序中各组件之间进行交互的一种重要方式，它不仅可以指明当前组件想 要执行的动作，还可以在不同组件之间传递数据。Intent 一般可被用于启动活动、启动服务以及 发送广播等场景。\n​\tIntent 大致可以分为两种：显式 Intent 和隐式 Intent。\n​\tIntent 有多个构造函数的重载，其中一个是 Intent(Context packageContext, Class  cls)。这个构造函数接收两个参数，第一个参数 Context 要求提供一个启动活动的上下文，第 二个参数 Class 则是指定想要启动的目标活动。\n​\tActivity 类中提供了一个 startActivity()方法，这 个方法是专门用于启动活动的，它接收一个 Intent 参数，这里我们将构建好的 Intent 传入 startActivity()方法就可以启动目标活动了。\n使用显式 Intent​\t我们现在存在两个活动，现在要由主活动跳转导其他活动。\n​\t先在主活动的布局文件中创建一个Button用于进行跳转操作\n&lt;Button    android:id=&quot;@+id/testbutton3&quot;    android:layout_width=&quot;wrap_content&quot;    android:layout_height=&quot;wrap_content&quot;    android:orientation=&quot;vertical&quot;    android:text=&quot;快来康康&quot;    app:layout_constraintBottom_toBottomOf=&quot;parent&quot;    app:layout_constraintEnd_toEndOf=&quot;parent&quot;    app:layout_constraintHorizontal_bias=&quot;0.949&quot;    app:layout_constraintStart_toStartOf=&quot;parent&quot;    app:layout_constraintTop_toTopOf=&quot;parent&quot;    app:layout_constraintVertical_bias=&quot;0.928&quot;    tools:ignore=&quot;MissingConstraints&quot; /&gt;\n\n​\t在主活动的Java中对Button按钮进行设置\nButton button3 =findViewById(R.id.testbutton3);button3.setOnClickListener(new View.OnClickListener() &#123;    @Override    public void onClick(View view) &#123;        Intent intent =new Intent(MainActivity.this,MainActivity2.class);        startActivity(intent);    &#125;&#125;);\n\n​\t我们首先构建出了一个 Intent，传入 MainActivity.this 作为上下文，传入 MainActivity2.class作为目标活动，这样我们的“意图”就非常明显了，即在MainActivity这个活 动的基础上打开 MainActivity2 这个活动。然后通过 startActivity()方法来执行这个 Intent。\n​\t使用这种方式来启动活动，Intent 的“意图”非常明显，因此我们称之为显式 Intent。\n使用隐式 Intent​\t相比于显式 Intent，隐式 Intent 则含蓄了许多，它并不明确指出我们想要启动哪一个活动， 而是指定了一系列更为抽象的 action 和 category 等信息，然后交由系统去分析这个 Intent， 并帮我们找出合适的活动去启动。\n通过在标签下配置的内容，可以指定当前活动能够响应的 action 和 category\n&lt;activity    android:name=&quot;.MainActivity2&quot;    android:exported=&quot;true&quot;&gt;    &lt;intent-filter&gt;        &lt;action android:name=&quot;com.example.activitytest.ACTION_START&quot; /&gt;        &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;        &lt;category android:name=&quot;com.example.activitytest.MY_CATEGORY&quot; /&gt;    &lt;/intent-filter&gt;&lt;/activity&gt;&lt;activity\n\n在标签中我们指明了当前活动可以响应 com.example.activitytest.ACTION_  START 这个 action，而标签则包含了一些附加信息，更精确地指明了当前的活动能够响应的 Intent 中还可能带有的 category。只有和中的内容同时能够匹配 上 Intent 中指定的 action 和 category 时，这个活动才能响应该 Intent。\n//隐式intentbutton3.setOnClickListener(new View.OnClickListener() &#123;    @Override    public void onClick(View view) &#123;        Intent intent =new Intent(&quot;com.example.activitytest.ACTION_START&quot;);        intent.addCategory(&quot;com.example.activitytest.MY_CATEGORY&quot;);        startActivity(intent);    &#125;&#125;);\n\n我们使用了 Intent 的另一个构造函数，直接将 action 的字符串传了进去，表明 我们想要启动能够响应 com.example.activitytest.ACTION_START 这个 action 的活动。android.intent.category.DEFAULT 是一种默认的 category，在调 用 startActivity()方法的时候会自动将这个 category 添加到 Intent 中。\n\n每个 Intent 中只能指定一个 action，但却能指定多个 category。\n\n更多隐式 Intent 的用法使用隐式 Intent，我们不仅可以启动自己程序内的活动，还可以启动其他程序的活动，这使得 Android多个应用程序之间的功能共享成为了可能。\nButton button2 =findViewById(R.id.testbutton2);button2.setOnClickListener(new View.OnClickListener() &#123;    @Override    public void onClick(View view) &#123;        Intent intent = new Intent(Intent.ACTION_VIEW);        intent.setData(Uri.parse(&quot;https://m.bilibili.com/video/BV1GJ411x7h7?ts=1658824194&amp;spmid=333.938.click.openapp_popup&amp;h5_buvid=68ACC3D1-102A-14F2-15EE-8869CEC0FC1A04348infoc&amp;unique_k=&amp;bsource=&quot;));        startActivity(intent);    &#125;&#125;);\n\n上面这段代码可以调用浏览器进入指定的网站\n这里我们首先指定了 Intent 的 action 是 Intent.ACTION_VIEW，这是一个 Android 系统内 置的动作，其常量值为 android.intent.action.VIEW。然后通过 Uri.parse()方法，将一个 网址字符串解析成一个 Uri 对象，再调用 Intent 的 setData()方法将这个 Uri 对象传递进去。\n\n与此对应，我们还可以在标签中再配置一个标签，用于更精确地 指定当前活动能够响应什么类型的数据。标签中主要可以配置以下内容。\n\nandroid:scheme。用于指定数据的协议部分，如上例中的 http 部分。\nandroid:host。用于指定数据的主机名部分，例如 www.baidu.com 。\nandroid:port。用于指定数据的端口部分，一般紧随在主机名之后。\nandroid:path。用于指定主机名和端口之后的部分，如一段网址中跟在域名之后的内容。\nandroid:mimeType。用于指定可以处理的数据类型，允许使用通配符的方式进行指定。\n\n只有标签中指定的内容和 Intent 中携带的 Data 完全一致时，当前活动才能够响应该 Intent。\n这里我们自己建立一个活动，让它也可以响应打开网页的Intent\n在 AndroidManifest.xml 中修改此活动的注册信息\n&lt;activity    android:name=&quot;.MainActivity3&quot;    android:exported=&quot;true&quot;&gt;    &lt;intent-filter tools:ignore=&quot;AppLinkUrlError&quot;&gt;        &lt;action android:name=&quot;android.intent.action.VIEW&quot; /&gt;        &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;        &lt;!-- 响应一个打开网页的intent --&gt;        &lt;data android:scheme=&quot;https&quot; /&gt;    &lt;/intent-filter&gt;&lt;/activity&gt;\n\n重新运行程序 此时点击上个活动的链接就会多出一个选项，说明我们成功了\n\n此时如果你选择chrome打开，就可以正常打开。\n但如果你选择我们的写的活动，就会进入我们写的活动。\n除了 http 协议外，我们还可以指定很多其他协议，比如 geo 表示显示地理位置、tel 表示拨打 电话。\nButton button4 =findViewById(R.id.testbutton4);button4.setOnClickListener(new View.OnClickListener() &#123;    @Override    public void onClick(View view) &#123;        Intent intent =new Intent(Intent.ACTION_VIEW);        intent.setData(Uri.parse(&quot;tel:110&quot;));        startActivity(intent);    &#125;&#125;);\n\n这一段代码就可以让我们调用系统拨号界面，并自动填写电话号码。\n\n向下一个活动传递数据在启动活动时传递数据的思路很简单，Intent 中提供了一系列 putExtra()方法的重载，可 以把我们想要传递的数据暂存在 Intent 中，启动了另一个活动后，只需要把这些数据再从 Intent 中取出就可以了。\nButton button3 =findViewById(R.id.testbutton3);button3.setOnClickListener(new View.OnClickListener() &#123;    @Override    public void onClick(View view) &#123;        String data = &quot;can can need&quot;;        Intent intent =new Intent(MainActivity.this,MainActivity2.class);        intent.putExtra(&quot;extra_data&quot;,data);//向下传递数据data        startActivity(intent);    &#125;&#125;);\n\n这里我们还是使用显式 Intent 的方式来启动 MainActivity，并通过 putExtra()方法传递了 一个字符串。注意这里 putExtra()方法接收两个参数，第一个参数是键，用于后面从 Intent 中 取值，第二个参数才是真正要传递的数据。\n接下来我们在MainActivity2中将传递的数据取出，并打印出来\n@Overrideprotected void onCreate(Bundle savedInstanceState) &#123;    super.onCreate(savedInstanceState);    setContentView(R.layout.activity_main2);    Intent intent =getIntent();    String data = intent.getStringExtra(&quot;extra_data&quot;);    Log.d(&quot;MainActivity_2&quot;,data);&#125;\n\n首先可以通过 getIntent()方法获取到用于启动 SecondActivity 的 Intent，然后调用 getStringExtra()方法，传入相应的键值，就可以得到传递的数据了。这里由于我们传递的是 字符串，所以使用 getStringExtra()方法来获取传递的数据。如果传递的是整型数据，则使 用 getIntExtra()方法；如果传递的是布尔型数据，则使用 getBooleanExtra()方法，以此 类推。\n活动的生命周期返回栈Android 是使用任务（Task）来管理活动的，一个任务就是一组存放在栈里的活动的集 合，这个栈也被称作返回栈（Back Stack）。栈是一种后进先出的数据结构，在默认情况下，每当 我们启动了一个新的活动，它会在返回栈中入栈，并处于栈顶的位置。而每当我们按下 Back 键 或调用 finish()方法去销毁一个活动时，处于栈顶的活动会出栈，这时前一个入栈的活动就会 重新处于栈顶的位置。系统总是会显示处于栈顶的活动给用户。\n活动状态每个活动在其生命周期中最多可能会有 4 种状态。\n\n运行状态当一个活动位于返回栈的栈顶时，这时活动就处于运行状态。\n暂停状态当一个活动不再处于栈顶位置，但仍然可见时，这时活动就进入了暂停状态。\n停止状态当一个活动不再处于栈顶位置，并且完全不可见的时候，就进入了停止状态。系统仍然会为 这种活动保存相应的状态和成员变量，但是这并不是完全可靠的，当其他地方需要内存时，处于 停止状态的活动有可能会被系统回收。\n销毁状态当一个活动从返回栈中移除后就变成了销毁状态。\n\n活动的生存期Activity 类中定义了 7 个回调方法，覆盖了活动生命周期的每一个环节，下面就来一一介绍这7个方法。\n\nonCreate()。它会在活动第一次被创建的时候调用。你应该在这个方法中完成活动的初始化操作，比如 说加载布局、绑定事件等。\nonStart()。这个方法在活动由不可见变为可见的时候调用。\nonResume()。这个方法在活动准备好和用户进行交互的时候调用。此时的活动一定位于 返回栈的栈顶，并且处于运行状态。\nonPause()。这个方法在系统准备去启动或者恢复另一个活动的时候调用。\nonStop()。这个方法在活动完全不可见的时候调用。它和 onPause()方法的主要区别在 于，如果启动的新活动是一个对话框式的活动，那么 onPause()方法会得到执行，而 onStop()方法并不会执行。\nonDestroy()。这个方法在活动被销毁之前调用，之后活动的状态将变为销毁状态。\nonRestart()。这个方法在活动由停止状态变为运行状态之前调用，也就是活动被重新启动了。\n\n以上 7 个方法中除了 onRestart()方法，其他都是两两相对的，从而又可以将活动分为 3 种生存期。\n\n完整生存期。活动在 onCreate()方法和 onDestroy()方法之间所经历的，就是完整生存期。一般情况下，一个活动会在 onCreate()方法中完成各种初始化操作，而在 onDestroy()方法中完成释放内存的操作。 \n\n可见生存期。活动在 onStart()方法和 onStop()方法之间所经历的，就是可见生存期。 在可见生存期内，活动对于用户总是可见的，即便有可能无法和用户进行交互。我们可 以通过这两个方法，合理地管理那些对用户可见的资源。比如在 onStart()方法中对资源进行加载，而在 onStop()方法中对资源进行释放，从而保证处于停止状态的活动不会占用过多内存。 \n\n前台生存期。活动在onResume()方法和 onPause()方法之间所经历的就是前台生存期。 在前台生存期内，活动总是处于运行状态的，此时的活动是可以和用户进行交互的，我 们平时看到和接触最多的也就是这个状态下的活动。\n\n\n用图文表示\n\nonSaveInstanceState()回调方法onSaveInstanceState()回调方法可以保证在活动被回收之前一定会被调用，因此我们可以通过这个方法来解决活动被回收时临 时数据得不到保存的问题。\nonSaveInstanceState()方法会携带一个 Bundle 类型的参数，Bundle 提供了一系列的方 法用于保存数据，比如可以使用 putString()方法保存字符串，使用 putInt()方法保存整型数 据，以此类推。\n每个保存方法需要传入两个参数，第一个参数是键，用于后面从 Bundle 中取值，第二个参数是真正要保存的内容。\n在 MainActivity 中添加如下代码就可以将临时数据进行保存：\n//暂存数据@Overrideprotected void onSaveInstanceState(@NonNull Bundle outState) &#123;    super.onSaveInstanceState(outState);    String temData = &quot;show show word&quot;;    outState.putString(&quot;data_key&quot;,temData);&#125;\n\n在onCreate方法中获得数据，并打印出来\n//获得销毁前的数据if(savedInstanceState!=null)&#123;    String temData =savedInstanceState.getString(&quot;data_key&quot;);    Log.d(&quot;TAG&quot;,temData);&#125;\n\n取出值之后再做相应的恢复操作就可以了，比如说将文本内容重新赋值到文本输入框上。\n活动的启动模式\nstandard模式\nstandard 是活动默认的启动模式，在不进行显式指定的情况下，所有活动都会自动使用这种启动模式。在 standard 模式（即默认情况）下，每当启 动一个新的活动，它就会在返回栈中入栈，并处于栈顶的位置。对于使用 standard 模式的活动， 系统不会在乎这个活动是否已经在返回栈中存在，每次启动都会创建该活动的一个新的实例。\n\n\nsingleTop 模式当活动的启动模式指定为 singleTop，在启动活动时如果发现返回栈的栈顶已经是该活动，则认为可以直接使用它，不会再创建新的活动实例。每当想要再启动一个 FirstActivity 时都会直接使用栈顶的活动，因此 FirstActivity 也只会有一个实例，仅按一次 Back 键就可以退出程序。不过当 FirstActivity 并未处于栈顶位置时，这时再启动 FirstActivity，还是会创建新的实例的。\n\nsingleTask模式当活动的启动模式指定为 singleTask，每次启动该活动时系统首先会在返回栈中检查是否 存在该活动的实例，如果发现已经存在则直接使用该实例，并把在这个活动之上的所有活动统统出栈，如果没有发现就会创建一个新的活动实例。\n\nsingleInstance 模式\n\n\n   指定为singleInstance 模式的活动会启用一个新的返回栈来管理这个活动。   \n\nsingleInstancePerTask模式Android12版本新增运行模式和singleTask几乎一样，不过singleInstancePerTask不需要为启动的Activity设置一个特殊的taskAffinity才能创建一个新的Task。\n\n小技巧知晓当前是在哪一个活动新建一个BaseActivity类，让BaseActivity继承AppCompatActivity，并重写onCreate()方法。\npublic class BaseActivity extends AppCompatActivity &#123;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) &#123;        super.onCreate(savedInstanceState);        Log.d(&quot;BaseActivity&quot;,getClass().getSimpleName());//打印活动名    &#125;&#125;\n\n接下来我们需要让 BaseActivity 成为 ActivityTest 项目中所有活动的父类。\n而由于 BaseActivity 又是继承自 AppCompatActivity 的，所以 项目中所有活动的现有功能并不受影响，它们仍然完全继承了 Activity 中的所有特性。\n现在每当我们进入到一个活动的界面，该活动的类名就会被打印出来，这样我们就可以时时 刻刻知晓当前界面对应的是哪一个活动了\n随时随地退出程序用一个专门的集合类对所有的活动进行管理\npublic class ActivityCollector &#123;    public static List&lt;Activity&gt; activities =new ArrayList&lt;&gt;();    public static void addActivity(Activity activity) &#123;        activities.add(activity);    &#125;    public static void removeActivity(Activity activity)&#123;        activities.remove(activity);    &#125;    public static void finishAll()&#123;        for(Activity activity : activities)&#123;            if (!activity.isFinishing())&#123;                activity.finish();            &#125;        &#125;        activities.clear();    &#125;&#125;\n\n我们通过一个 List 来暂存活动，然后提供了一个 addActivity()方法用 于向 List 中添加一个活动，提供了一个 removeActivity()方法用于从 List 中移除活动，最后提 供了一个 finishAll()方法用于将 List 中存储的活动全部销毁掉。\n还要修改BaseActivity类中的代码\npublic class BaseActivity extends AppCompatActivity &#123;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) &#123;        super.onCreate(savedInstanceState);        Log.d(&quot;BaseActivity&quot;,getClass().getSimpleName());        ActivityCollector.addActivity(this);    &#125;    @Override    protected void onDestroy() &#123;        super.onDestroy();        ActivityCollector.removeActivity(this);    &#125;&#125;\n\n在 BaseActivity 的 onCreate()方法中调用了 ActivityCollector 的 addActivity()方 法，表明将当前正在创建的活动添加到活动管理器里。然后在 BaseActivity 中重写 onDestroy() 方法，并调用了 ActivityCollector 的 removeActivity()方法，表明将一个马上要销毁的活 动从活动管理器里移除。\n从此以后，不管你想在什么地方退出程序，只需要调用 ActivityCollector.finishAll() 方法就可以了。\n\n前提是：所有类都继承了BaseActivity。\n\n","categories":["知识总结","Android"]},{"title":"crackme2","url":"/2022/07/28/crackme2/","content":"观察题目是apk文件用jadx反编译\n在com包下的example.CrackMe2目录下的MainActivity中 \n\n看到解题的关键\n很简单是一个魔改的RC4加密 RC4加密解密用一套算法\n脚本只要将我们得到的密文当成原文输入即可的到真正的原文即flag\npublic  class wp&#123;      /**     * @param encrypt     * @param keys     * @return     */    public static  String encode(char[] encrypt, String keys) &#123;        char[] keyBytes = new char[256];        char[] cypherBytes = new char[256];        for (int i = 0; i &lt; 256; i++)         &#123;            keyBytes[i] = keys.charAt(i % keys.length());            cypherBytes[i] = (char) i;        &#125;        int jump = 0;        for (int i2 = 0; i2 &lt; 256; i2++) &#123;            jump = (cypherBytes[i2] + jump + keyBytes[i2]) &amp; 255;            char tmp = cypherBytes[i2];            cypherBytes[i2] = cypherBytes[jump];            cypherBytes[jump] = tmp;        &#125;        int i3 = 0;        int jump2 = 0;        StringBuilder Result = new StringBuilder();        for (int x = 0; x &lt; encrypt.length; x++) &#123;            i3 = (i3 + 1) &amp; 255;            char tmp2 = cypherBytes[i3];            jump2 = (jump2 + tmp2 + 136) &amp; 255;            char t = (char) ((cypherBytes[jump2] + tmp2) &amp; 255);            cypherBytes[i3] = cypherBytes[jump2];            cypherBytes[jump2] = tmp2;            try &#123;                Result.append(new String(new char[]&#123;(char) (encrypt[x] ^ cypherBytes[t])&#125;));            &#125; catch (Exception e) &#123;                e.printStackTrace();                return &quot;&quot;;            &#125;        &#125;        return Result.toString();    &#125;    public static void main(String[]args)&#123;            char[] target = &#123;205, &#x27;R&#x27;, &#x27;t&#x27;, &#x27;z&#x27;, 30, &#x27;\\b&#x27;, &#x27;\\b&#x27;, 224, &#x27;W&#x27;, &#x27;;&#x27;, 24, 153, 175, &#x27;=&#x27;, 29, 148, 21, &#x27;%&#x27;, &#x27;g&#x27;, &#x27;[&#x27;, &#x27;d&#x27;, &#x27;S&#x27;, 31, &#x27;;&#x27;, 220, 162, &#x27;F&#x27;, &#x27;6&#x27;, 211, 253, 190, &#x27;3&#x27;&#125;;            String result =encode(target,&quot;happygame&quot;);            System.out.println(&quot;flag&#123;&quot;+result+&quot;&#125;&quot;);            &#125;  &#125;    \n\n","categories":["比赛WP","2022CISCN华中分区赛","re"]},{"title":"meikyu2","url":"/2022/07/29/meikyu2/","content":"观察题目压缩包中有四个文件\n\n打开mian.py\n可以发现flag判断程序\n根据关键字“START, END, WALL, ROAD” 猜测这是一道迷宫题\nmylib是作者自己写的库，是一个pyd文件 二进制文件 暂不清楚如何对其进行反编译\n利用**help(“mylib”)**指令查看mylib中的信息\n&gt;&gt;&gt; help(&quot;mylib&quot;)Help on module mylib:NAME    mylibCLASSES    enum.Enum(builtins.object)        CheckStatus    class CheckStatus(enum.Enum)     |  CheckStatus(value, names=None, *, module=None, qualname=None, type=None, start=1)     |     |  An enumeration.     |     |  Method resolution order:     |      CheckStatus     |      enum.Enum     |      builtins.object     |     |  Data and other attributes defined here:     |     |  ERROR_CIPHER_LEN = &lt;CheckStatus.ERROR_CIPHER_LEN: 4&gt;     |     |  ERROR_DATA_LEN = &lt;CheckStatus.ERROR_DATA_LEN: 3&gt;     |     |  ERROR_FMT = &lt;CheckStatus.ERROR_FMT: 2&gt;     |     |  FAIL = &lt;CheckStatus.FAIL: 0&gt;     |     |  FATAL_ERROR = &lt;CheckStatus.FATAL_ERROR: 5&gt;     |     |  SUCCESS = &lt;CheckStatus.SUCCESS: 1&gt;     |     |  ----------------------------------------------------------------------     |  Data descriptors inherited from enum.Enum:     |     |  name     |      The name of the Enum member.     |     |  value     |      The value of the Enum member.     |     |  ----------------------------------------------------------------------     |  Readonly properties inherited from enum.EnumMeta:     |     |  __members__     |      Returns a mapping of member name-&gt;value.     |     |      This mapping lists all enum members, including aliases. Note that this     |      is a read-only view of the internal mapping.FUNCTIONS    check(map_, key) -&gt; mylib.CheckStatusDATA    END = 69    ROAD = 32    START = 83    WALL = 35    __test__ = &#123;&#125;    util = &lt;WinDLL &#x27;D:\\meikyu2\\1656071816meikyu\\util.dl...FILE    d:\\meikyu2\\1656071816meikyu\\mylib.pyd\n\n根据上面可以得到起点，终点，墙，路分别对应的数值\nwith open(&#x27;data&#x27;, &#x27;rb&#x27;) as f:    data = f.read()map_ = list(data)print(len(map_))\n\n利用上面得代码，得到迷宫总长度10201 根据因式分解 得迷宫大小为 101*101\n#此脚本有待完善with open(&#x27;data&#x27;, &#x27;rb&#x27;) as f:    data = f.read()cipher = list(b&#x27;suta-to&#x27;)for i, ch in enumerate(map_):    if i % 101 == 0:        print(&quot;],&quot;)        print(&quot;[&quot;,end=&quot;&quot;)    map_[i] = ch ^ cipher[i % len(cipher)]    print(map_[i], end=&#x27;,&#x27;)print()\n\n利用上面得脚本可得到完整得迷宫，需要稍微处理一下，偷懒不改了\nmapn\n101*101实在是太大了，一下子都展现不了\n\n迷宫大体就这样\n但是还没找的走迷宫得方式呢\n只有一个dll文件还没有利用\n用IDA打开\n\n看来是经典得WASD了\n利用DFS脚本跑一下就可以得到flag了\n脚本import copymapusedmap = copy.copy(map)flag = &#x27;&#x27;# print(len(map))def DFS(x, y):    global flag, usedmap #声明全局变量     if map[x + 1][y] == 32 and usedmap[x + 1][y] == 32:  # 如果下⼀步不是墙 且没⾛过      usedmap[x][y] = 1  # 标记当前坐标⾛过（不是下⼀步）      flag += &#x27;s&#x27;      DFS(x + 1, y)  # 尝试向下⾛      flag = flag[:-1]  # 回溯到这说明这条路不可⾏ 所以去掉&#x27;s&#x27;      usedmap[x][y] = 32  # 再设置当前坐标为32 重新找路    if map[x - 1][y] == 32 and usedmap[x - 1][y] == 32:        usedmap[x][y] = 1        flag += &#x27;w&#x27;        DFS(x - 1, y)        flag = flag[:-1]        usedmap[x][y] = 32    if map[x][y + 1] == 32 and usedmap[x][y + 1] == 32:        usedmap[x][y] = 1        flag += &#x27;d&#x27;        DFS(x, y + 1)        flag = flag[:-1]        usedmap[x][y] = 32    if map[x][y - 1] == 32 and usedmap[x][y - 1] == 32:        usedmap[x][y] = 1        flag += &#x27;a&#x27;        DFS(x, y - 1)        flag = flag[:-1]        usedmap[x][y] = 32    if x == len(map) - 2 and y == len(map) - 2:  # 31x31的迷宫 终点也就是数组的(29,29)       print(&quot;找到了！flag结尾会少一位 自己判断一下\\n&quot; + flag)#少一位的原因： 最后一次前四个判断都没有进入 所以flag没有增加       returnDFS(1, 0)\n\n结果为（最后得加一个d才是真正得flag 这是这个脚本得缺陷 问题不大 ）\n找到了！flag结尾会少一位 自己判断一下dssddwwddddddddssssddssssssssssssddssssssssssssddssddddssssaassssddssssddddddssddddddssddssssddddddssddddssddssssssssddssddssddddddwwddddddssddddddddssddddssssssddddddssddddddssssddssddssddssssssddddddssssssss\n\n真正得flag为\ndssddwwddddddddssssddssssssssssssddssssssssssssddssddddssssaassssddssssddddddssddddddssddssssddddddssddddssddssssssssddssddssddddddwwddddddssddddddddssddddssssssddddddssddddddssssddssddssddssssssddddddssssssssd\n\n记得MD5\n","categories":["比赛WP","2022CISCN华中分区赛","re"]},{"title":"BlueBird_apk2","url":"/2022/07/31/BlueBird-apk2/","content":"观察题目是一个apk文件，用jadx打开 好像是native层逆向\n解压apk文件打开lib文件夹 找 .so文件\n\n用IDA打开\n找到两个关键函数 proc01 和 verify \n\nverify有核实验证之意可能是check flag的函数\n还原这两个函数逻辑\nproc01此函数中调用了微软的一些库函数\n\n大概是一些格式化函数，不是关键\n\n这个操作就是交换 一个字节的高四位与低四位\n还原代码：\nfor (size_t i = 0; i &lt; 32; i++)&#123;  /* code */  unsigned char n = d[i] &gt;&gt; 4;  d[i] = n + (n ^ (d[i] &lt;&lt; 4)) - (n &amp; ~(d[i] &lt;&lt; 4));&#125;\n\nverify有按位与 有按位或 有取反 操作，并不懂最后的操作是干啥\n但是影响不大 IDA生成的伪代码可以直接借来利用\n原函数是从0~31的顺序操作并且和后一位操作有关 因此我们要逆向的话要反着操作才对\n代码：\nchar *input; // ediint len; // eaxint v3; // ebxchar v4; // clchar v5; // clchar v6; // clchar v7; // dlchar v8; // alchar v9; // clint v11; // [esp+10h] [ebp-1Ch]int v12; // [esp+14h] [ebp-18h]input = d;// proc01(s);len = 32;  v3 = 31;  v11 = len;  do  &#123;    v6 = input[v3];    v12 = v3 + 1;    v7 = input[(len + v3 + 1) % len];    v8 = v6 | v7;    v9 = ~v6;    if ( (v3 &amp; 1) != 0 )    &#123;      v8 -= v7;      v4 = v7 &amp; v9;    &#125;    else    &#123;      v4 = v9 - (v9 | v7);    &#125;    v5 = v8 + v4;    input = d;    len = v11;    d[v3--] = v5;  &#125;  while ( v3&gt;=0 );\n\n完整脚本最后根据密文d\n\n我们完成脚本\n#include &lt;stdio.h&gt;void main()&#123;  unsigned char d[32] = &#123;0x86, 0x96, 0x12, 0xC1, 0x03, 0x73, 0x05, 0x96, 0x20, 0x21,                     0xC2, 0x33, 0xF2, 0x82, 0x06, 0xF7, 0xC7, 0x80, 0xC6, 0x43,                     0x52, 0xA0, 0x82, 0x03, 0xC2, 0x83, 0xB3, 0x43, 0xA1, 0x50,                     0x43, 0xE0&#125;;  char *input; // edi  int len; // eax  int v3; // ebx  char v4; // cl  char v5; // cl  char v6; // cl  char v7; // dl  char v8; // al  char v9; // cl  int v11; // [esp+10h] [ebp-1Ch]  int v12; // [esp+14h] [ebp-18h]  input = d;  len = 32;    v3 = 31;    v11 = len;    do    &#123;      v6 = input[v3];      v12 = v3 + 1;      v7 = input[(len + v3 + 1) % len];      v8 = v6 | v7;      v9 = ~v6;      if ( (v3 &amp; 1) != 0 )      &#123;        v8 -= v7;        v4 = v7 &amp; v9;      &#125;      else      &#123;        v4 = v9 - (v9 | v7);      &#125;      v5 = v8 + v4;      input = d;      len = v11;      d[v3--] = v5;    &#125;    while ( v3&gt;=0 );  for (size_t i = 0; i &lt; 32; i++)  &#123;    /* code */    unsigned char n = d[i] &gt;&gt; 4;    d[i] = n + (n ^ (d[i] &lt;&lt; 4)) - (n &amp; ~(d[i] &lt;&lt; 4));  &#125;  for (size_t i = 0; i &lt; 32; i++)  &#123;    /* code */    printf(&quot;%c&quot;,d[i]);  &#125;  &#125;\n\n跑出结果为：X0YxdTc3ZXJfUzR2M19UaDNfVzByMWRf\n直接提交不对 base64解码 \n_F1u77er_S4v3_Th3_W0r1d_\n\n要去除两端的下划线才行\nF1u77er_S4v3_Th3_W0r1d\n\n不知为何\n最后MD5加密一下就得到了flag\n\nflag{03cd6eb78a6c70f16bfbfd3508f7065f}\n\n","categories":["比赛WP","2022CISCN华中分区赛","re"]},{"title":"xpxp","url":"/2022/07/31/xpxp/","content":"观察题目给了一个raw文件 一般对于题要用 volatility内存取证工具\n\n官网下载地址  不建议下载3.0版本 还不稳定\n我是在windows系统上运行的，以下命令都是在win命令\n\n首先查看系统的属性\nPS D:\\CTF\\22年国赛\\复赛\\misc\\已解\\xpxp\\volatility_2.6_win64_standalone&gt; .\\volatility_2.6_win64_standalone.exe -f xpxp.raw kdbgscanVolatility Foundation Volatility Framework 2.6**************************************************Instantiating KDBG using: Kernel AS WinXPSP2x86 (5.1.0 32bit)Offset (V)                    : 0x80546ae0Offset (P)                    : 0x546ae0KDBG owner tag check          : TrueProfile suggestion (KDBGHeader): WinXPSP3x86Version64                     : 0x80546ab8 (Major: 15, Minor: 2600)Service Pack (CmNtCSDVersion) : 3Build string (NtBuildLab)     : 2600.xpsp.080413-2111PsActiveProcessHead           : 0x8055b158 (35 processes)PsLoadedModuleList            : 0x80554fc0 (123 modules)KernelBase                    : 0x804d8000 (Matches MZ: True)Major (OptionalHeader)        : 5Minor (OptionalHeader)        : 1KPCR                          : 0xffdff000 (CPU 0)**************************************************Instantiating KDBG using: Kernel AS WinXPSP2x86 (5.1.0 32bit)Offset (V)                    : 0x80546ae0Offset (P)                    : 0x546ae0KDBG owner tag check          : TrueProfile suggestion (KDBGHeader): WinXPSP2x86Version64                     : 0x80546ab8 (Major: 15, Minor: 2600)Service Pack (CmNtCSDVersion) : 3Build string (NtBuildLab)     : 2600.xpsp.080413-2111PsActiveProcessHead           : 0x8055b158 (35 processes)PsLoadedModuleList            : 0x80554fc0 (123 modules)KernelBase                    : 0x804d8000 (Matches MZ: True)Major (OptionalHeader)        : 5Minor (OptionalHeader)        : 1KPCR                          : 0xffdff000 (CPU 0)\n\n可以发现系统最大可能是WinXPSP2x86，接下来我们取查看运行的进程\nPS D:\\CTF\\22年国赛\\复赛\\misc\\已解\\xpxp\\volatility_2.6_win64_standalone&gt; .\\volatility_2.6_win64_standalone.exe -f xpxp.raw --profile=WinXPSP2x86 pslistVolatility Foundation Volatility Framework 2.6Offset(V)  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit---------- -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------0x821b9830 System                    4      0     59      252 ------      00x81cc2020 smss.exe                540      4      3       19 ------      0 2022-05-20 03:06:37 UTC+00000x82013da0 csrss.exe               608    540     11      447      0      0 2022-05-20 03:06:40 UTC+00000x82012ca8 winlogon.exe            632    540     23      459      0      0 2022-05-20 03:06:40 UTC+00000x81c9dda0 services.exe            676    632     16      274      0      0 2022-05-20 03:06:41 UTC+00000x820eb1c8 lsass.exe               688    632     24      356      0      0 2022-05-20 03:06:41 UTC+00000x81f4eda0 vmacthlp.exe            900    676      1       25      0      0 2022-05-20 03:06:41 UTC+00000x81fe7240 svchost.exe             916    676     19      198      0      0 2022-05-20 03:06:41 UTC+00000x81e1dda0 svchost.exe             996    676      9      274      0      0 2022-05-20 03:06:41 UTC+00000x81dc5da0 svchost.exe            1136    676     66     1215      0      0 2022-05-20 03:06:41 UTC+00000x820f4020 svchost.exe            1184    676      5       67      0      0 2022-05-20 03:06:41 UTC+00000x81ec87e8 svchost.exe            1236    676     15      196      0      0 2022-05-20 03:06:42 UTC+00000x81d24c10 spoolsv.exe            1532    676     14      130      0      0 2022-05-20 03:06:44 UTC+00000x81ca5da0 explorer.exe           1808   1748     17      448      0      0 2022-05-20 03:06:54 UTC+00000x82102c18 rundll32.exe           1936   1808      4       78      0      0 2022-05-20 03:06:55 UTC+00000x81ff5da0 vmtoolsd.exe           1944   1808      5      202      0      0 2022-05-20 03:06:55 UTC+00000x81d7e448 ctfmon.exe             1952   1808      1      110      0      0 2022-05-20 03:06:55 UTC+00000x820ad378 msmsgs.exe             1980   1808      5      162      0      0 2022-05-20 03:06:55 UTC+00000x820ac470 svchost.exe             212    676      5       87      0      0 2022-05-20 03:07:00 UTC+00000x81c10228 VGAuthService.e         328    676      2       60      0      0 2022-05-20 03:07:00 UTC+00000x81f8b410 vmtoolsd.exe            512    676      9      261      0      0 2022-05-20 03:07:08 UTC+00000x821022e0 wmiprvse.exe           1108    916     13      241      0      0 2022-05-20 03:07:08 UTC+00000x820c8660 wscntfy.exe            1572   1136      1       39      0      0 2022-05-20 03:07:08 UTC+00000x81d41da0 alg.exe                1416    676      7      104      0      0 2022-05-20 03:07:09 UTC+00000x81da1da0 wordpad.exe             244   1808      2      100      0      0 2022-05-20 03:07:09 UTC+00000x81fedda0 notepad.exe             236   1808      1       50      0      0 2022-05-20 03:07:14 UTC+00000x81f33508 mspaint.exe             680   1808      5      120      0      0 2022-05-20 03:07:36 UTC+00000x820134b8 svchost.exe            1096    676      8      132      0      0 2022-05-20 03:07:36 UTC+00000x81ecb2c0 wuauclt.exe             404   1136      8      173      0      0 2022-05-20 03:07:53 UTC+00000x81d5dda0 notepad.exe             372    528      1       50      0      0 2022-05-20 03:08:03 UTC+00000x81c12da0 wuauclt.exe             752   1136      5      139      0      0 2022-05-20 03:08:08 UTC+00000x8211e438 notepad.exe             132   1808      1       50      0      0 2022-05-20 03:08:08 UTC+00000x8207b020 notepad.exe            2060   1808      1       50      0      0 2022-05-20 03:08:18 UTC+00000x81ca27f0 DumpIt.exe             2304   1808      1       29      0      0 2022-05-20 03:09:00 UTC+00000x81ffc6e8 conime.exe             2316   2304      1       38      0      0 2022-05-20 03:09:00 UTC+0000\n\n我们可以发现使用过notepad(记事本)程序，将记事本中的内容输出出来\nPS D:\\CTF\\22年国赛\\复赛\\misc\\已解\\xpxp\\volatility_2.6_win64_standalone&gt; .\\volatility_2.6_win64_standalone.exe -f xpxp.raw --profile=WinXPSP2x86 notepadVolatility Foundation Volatility Framework 2.6Process: 236Text:?\u0003Text:dText:\u001cText:?Text:??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????Process: 372Text:?\u0001Text:dText:\u001cText:?Text:f = open(&#x27;./flag.zip&#x27;, &#x27;rb&#x27;).read()new = open(&#x27;./fffflllaag.dat&#x27;, &#x27;ab&#x27;)letter = &#x27;&#x27;secret = int(letter,16)print(secret)for i in f:    n = int(i) ^ secret    new.write(int(n).to_bytes(1, &#x27;big&#x27;))Process: 132Text:?\u0004Text:dText:\u001cText:?Text:According to Homer&#x27;s epic, the hero Achilles is the precious son of the mortal Polus and the beautiful fairy Thetis.It is said that her mother Tethys carried him upside down into the Styx river when he was just born, so that he could be invulnerable.Unfortunately, due to the rapid flow of the Ming River, his mother didn&#x27;t dare to let go of his heel.The heel held by his mother was accidentally exposed outside the water, so the heel was the most vulnerable place, leaving the only &quot;dead hole&quot; in his body, so he buried the disaster.When he grew up, Achilles fought bravely. When he went to attack the city of Troy (the story of Trojan horse slaughtering the city), the brave Achilles singled out the Trojan general Hector, killed him and dragged his body to demonstrate.But later, after conquering Troy, Achilles was attacked by an arrow by Hector&#x27;s brother-in-law Paris and hit his ankle - the hero fell to the ground and died at the moment of shaking.ankle, ankle, I love ankle.The password is ??k1eAn???Process: 2060Text:?\u0002Text:dText:\u001cText:?Text:???????????????????????????????XOR?EOR????????????????????????????????letter?????????????????????????\n\n提出关键信息\n//可能python代码f = open(&#x27;./flag.zip&#x27;, &#x27;rb&#x27;).read()new = open(&#x27;./fffflllaag.dat&#x27;, &#x27;ab&#x27;)letter = &#x27;&#x27;secret = int(letter,16)print(secret)for i in f:    n = int(i) ^ secret    new.write(int(n).to_bytes(1, &#x27;big&#x27;)) //提示passwordankle, ankle, I love ankle.The password is ??k1eAn???\n\n记事本中提到两个重要文件 .&#x2F;flag.zip和**.&#x2F;fffflllaag.dat**\n我们搜寻一下\nPS D:\\CTF\\22年国赛\\复赛\\misc\\已解\\xpxp\\volatility_2.6_win64_standalone&gt; .\\volatility_2.6_win64_standalone.exe -f xpxp.raw --profile=WinXPSP2x86 filescan | findstr flagVolatility Foundation Volatility Framework 2.60x000000000240cad8      1      0 R--rw- \\Device\\HarddiskVolume1\\Documents and Settings\\All Users\\Documents\\flagData.zip\n\n我们找到一个有关flag的一个文件\n把它提取出来\nPS D:\\CTF\\22年国赛\\复赛\\misc\\已解\\xpxp\\volatility_2.6_win64_standalone&gt; .\\volatility_2.6_win64_standalone.exe -f xpxp.raw --profile=WinXPSP2x86 dumpfiles -Q 0x000000000240cad8 -D ./Volatility Foundation Volatility Framework 2.6DataSectionObject 0x0240cad8   None   \\Device\\HarddiskVolume1\\Documents and Settings\\All Users\\Documents\\flagData.zip\n\n得到一个dat文件\n直接在kali中用foremost指令\n$ foremost file.None.0x81d20978.dat Processing: file.None.0x81d20978.dat|foundat=fffflllaag.dat�r����b���j��w�e��..�p f�b��I��U�+������������������;��x�&#123;�1�8�e��J�eN�oV*��m��u�f��/�����Rl�3U(�2����e��-~=���y�y�OȽ[U3W�[&#125;H00DQ�Rfʃi�7�O�Y-��2�B��l�#/����9D�p9V�                                      ��4��                                           Pn.!�:�a���at�N�p���(G~�rn�| ��*|    \n\n得到dat文件中隐藏的zip压缩包\n随后我们便能看见fffflllaag.dat文件\n根据我们得到的python代码 可知原文件应该是zip文件，zip文件与secret进行异或就得到了dat文件\ndat文件头为5A 41 zip文件的文件头为50 4B\n0X5A ^ 0X50 = 0X0A0X41 ^ 0X48 = 0X0A\n\n所以secret应该为 0x0A\n我们用010打开dat文件\n\n\n异或后更改文件后缀为zip\n并不是伪加密 需要密码\n根据记事本中的提示我们有两种方法获得密码\n方法一利用工具ARCHPR掩码爆破\n\n时间很长\n大概要半个小时\n可以爆出密码\nAnk1eAnk1e\n方法二猜\n??k1eAn??? 就很像两个ankle连在一起 \nAnk1eAnk1e\n得flagThe answer to egg1 is : You are the only weakness in my bodyThis is also the answer to flag\n\n直接提交**flag{You are the only weakness in my body}**不对 \n看来我们还需要找出问题egg1\nPS D:\\CTF\\22年国赛\\复赛\\misc\\已解\\xpxp\\volatility_2.6_win64_standalone&gt; .\\volatility_2.6_win64_standalone.exe -f xpxp.raw --profile=WinXPSP2x86 filescan | findstr eggVolatility Foundation Volatility Framework 2.60x00000000020273b8      1      0 R--rwd \\Device\\HarddiskVolume1\\Program Files\\xerox\\egg4.txt0x00000000020cb2b8      1      0 RW-rw- \\Device\\HarddiskVolume1\\Documents and Settings\\Administrator\\Recent\\egg4.lnk0x0000000002137248      1      0 R--r-- \\Device\\HarddiskVolume1\\Documents and Settings\\Administrator\\My Documents\\egg1.rtf0x000000000214c450      1      0 RW-rw- \\Device\\HarddiskVolume1\\Documents and Settings\\Administrator\\Recent\\egg5.lnk0x00000000022c4d08      1      0 RW-rw- \\Device\\HarddiskVolume1\\Documents and Settings\\Administrator\\Recent\\egg1.lnk0x000000000231e748      1      0 RW-rw- \\Device\\HarddiskVolume1\\Documents and Settings\\Administrator\\Recent\\egg3.lnk0x000000000232d938      1      0 R--rwd \\Device\\HarddiskVolume1\\Program Files\\Messenger\\egg5.txt0x0000000002409e28      1      0 R--rwd \\Device\\HarddiskVolume1\\Documents and Settings\\Administrator\\My Documents\\My Pictures\\egg3.bmp0x000000000251c538      1      0 R--rwd \\Device\\HarddiskVolume1\\Documents and Settings\\Administrator\\My Documents\\My Music\\egg2.txt\n\n把egg1.rtf文件dump出来\n用写字板打开\nDo you know what the Chinese meaning of ankle is? flag is that.Remember to convert the answer to a 32-bit lowercase MD5 value.\n\n原来如此 将answer MD5 32小写加密\nflag&#123;47155018947fbed1987313fe2d02e0bb&#125;\n\n","categories":["比赛WP","2022CISCN华中分区赛","misc"]},{"title":"2022CISCN华中分区_参考WP","url":"/2022/08/01/2022CISCN%E5%8D%8E%E4%B8%AD%E5%88%86%E5%8C%BA-%E5%8F%82%E8%80%83WP/","content":"这些WP对我赛后复现很有帮助，避免丢失奇安信攻防社区-CISCN2022华中分区部分wp (butian.net)\n2022 CISCN 华中区域赛部分题目题解 | Silent World (ofortune.xyz)\nCISCN2022——华中分区赛后WP - 枫のBlog (goodapple.top)\n2022CISCN 华中分区赛wp (qq.com)\n","categories":["比赛WP","2022CISCN华中分区赛","大佬WP"]},{"title":"volatility内存取证工具","url":"/2022/08/01/volatility%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%B7%A5%E5%85%B7/","content":"基本介绍Volatility是一款非常强大的内存取证工具，能够对导出的内存镜像进行分析，通过获取内核数据结构，使用插件获取内存的详细情况以及系统的运行状态，并且是一个开源的项目。\n官网下载   官方文档\n当我们遇到一些img、dmp、raw、vmem文件时就会用到他。\n一些常用的命令imageinfo获取内存镜像的摘要信息，内存镜像的系统版本\nvolatility -f easy_dump.img imageinfo\n\n使用--info参数来查看Volatiliity已经添加的profile和插件等信息\nvolatility --info\n\nkdbgscan插件扫描profile的值，通常扫描结果有多个，只有一个结果完全正确。kdbgscan和imageinfo仅适用于Windows内存镜像。\nvolatility -f easy_dump.img kdbgscan\n\npslist可以用来列出运行的进程。如果Exit所在的一列显示了日期时间，则表明该进程已经结束了。\nvolatility -f easy_dump.img --profile=Win7SP1x64 pslist\n\nmemdump命令将该进程作为文件导出。（p后跟扫描出的进程pid）\nvolatility -f easy_dump.img --profile=Win7SP1x64 memdump -p 2888 -D ./\n\n转储内存中的进程里exe文件（将进程转储到可执行文件中）\nvolatility -f easy_dump.img --profile=Win7SP1x64 procdump -p 2888 -D ./\n\nhivelist可以用来列举缓存在内存中的注册表（注册表中记录了用户安装在计算机上的软件和每个程序的相关信息，通过它可以控制硬件、软件、用户环境和操作系统界面的数据信息文件）\nvolatility -f easy_dump.img --profile=Win7SP1x64 hivelist\n\nfilescan可以扫描内存中的文件\nvolatility -f easy_dump.img --profile=Win7SP1x64 filescan\n\ndumpfiles可以将内存中的文件导出 （Q参数后跟扫描出的文件地址 D后面的参数接dump出的文件放在哪）\nvolatility -f easy_dump.img --profile=Win7SP1x64 dumpfiles -Q 0x00000000236eb5e0 -D ./ \n\n查看当前notepad内容（只能查看进程中的notepad.exe中的内容）\nvolatility -f 1.vmem --profile=Win7SP1x64 notepad\n\n查看进程命令行参数\nvolatility -f memory.dmp --profile Win7SP1x64 cmdline\n\n查看命令行历史记录\nvolatility -f memory.dmp --profile Win7SP1x64 cmdscan\n\n查看屏幕截图\nvolatility -f 1.vmem --profile=Win7SP1x64 screenshot --dump-dir=./\n\n查看网络连接\nvolatility -f 1.vmem --profile=Win7SP1x64 netscan\n\n查看浏览器历史记录\nvolatility -f 1.vmem --profile=Win7SP1x64 iehistory\n\n查看Windows服务列表\nvolatility -f 1.vmem --profile=Win7SP1x64 svcscan\n\n查看用户名密码信息（hash值）\nvolatility -f 1.vmem --profile=Win7SP1x64 hashdump\n\n打印内存中Windows剪切板中的内容\nvolatility -f 1.vmem --profile=Win7SP1x64 clipboard\n\n打印注册表项及其子项和对应的值\nvolatility -f 1.vmem --profile=Win7SP1x64 printkey\n\n参考文章\nCTF| 攻击取证之内存分析 - 腾讯云开发者社区-腾讯云 (tencent.com)\nvolatility内存取证 | YLCao’s Blog\n使用Volatility解决CTF取证类题目 - MengChen’s Blog (mengsec.com)\n从一道CTF学习Volatility取证注册表 - FreeBuf网络安全行业门户\n\n","categories":["知识总结","CTF工具","volatility"]},{"title":"domainhacker1，domainhacker2","url":"/2022/08/01/domainhacker1%EF%BC%8Cdomainhacker2/","content":"domainhacker1观察用wireshark打开，跟踪TCP数据流，发现流15有一个rar的压缩包，把它提取出来\n\n发现需要密码后 在流13处发现在打包rar 可能会有密码出现\n\n将红色部分取出，进行URL解码\n\n发现有base64加密 POST三个参数，并且从第二个字符开始取\n\n对三个参数分别尝试base64解密\n\n第二个参数 解密后 显示了压缩的指令 所以解压密码就是-P的后面  SecretsPassw0rds\n\n得flagflag&#123;416f89c3a5deb1d398a1a1fce93862a7&#125;\n\ndomainhacker2观察该题直接给了一个压缩包\n寻找密码方式和上题一样\n在流27中有base64加密后得压缩指令\n\n\n解压密码为 FakePassword123$\n解压后 出现了 NTDS 等一些文件 google了一下\n参考从NTDS.dit获取密码hash的三种方法 - 腾讯云开发者社区-腾讯云 (tencent.com)\n大概了解后 利用secretsdump\nPS D:\\CTF\\第六届“蓝帽杯”\\misc\\domainhacker2_184c16876d41965a695f89232ae5392d\\new\\Active Directory&gt; python .\\secretsdump.py -system SYSTEM -ntds .\\ntds.dit  LOCAL -historyImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation[*] Target system bootKey: 0xf5a55bb9181f33269276949d2ad680e5[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)[*] Searching for pekList, be patient[*] PEK # 0 found and decrypted: 752aa10b88b269bd735d54b802d5c86c[*] Reading and decrypting hashes from .\\ntds.dittest.local\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:a85016dddda9fe5a980272af8f54f20e:::test.local\\Administrator_history0:500:aad3b435b51404eeaad3b435b51404ee:07ab403ab740c1540c378b0f5aaa4087:::test.local\\Administrator_history1:500:aad3b435b51404eeaad3b435b51404ee:34e92e3e4267aa7055a284d9ece2a3ee:::test.local\\Administrator_history2:500:aad3b435b51404eeaad3b435b51404ee:34e92e3e4267aa7055a284d9ece2a3ee:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Admin:1001:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::test:1003:aad3b435b51404eeaad3b435b51404ee:4f95f1c5acfc3b972a1ce2a29ef1f1c5:::test_history0:1003:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::test_history1:1003:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::PDC$:1004:aad3b435b51404eeaad3b435b51404ee:416f89c3a5deb1d398a1a1fce93862a7:::PDC$_history0:1004:aad3b435b51404eeaad3b435b51404ee:77c3da77dc1b7a6c257ba59cd4633209:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:8d9c46df1a433693842082203898424f:::EXCHANGE$:1107:aad3b435b51404eeaad3b435b51404ee:8f203498c3054ed0e01efc9d1da10ecd:::EXCHANGE$_history0:1107:aad3b435b51404eeaad3b435b51404ee:c5c7378155dc9d28ad53d8c1f9e9d915:::test.local\\$731000-68GJ1H3VU01P:1127:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\SM_96e3b8005d5c4140a:1128:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\SM_2e01c85cf3c346a3b:1129:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\SM_70dd52fc546d40e69:1130:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\SM_232124d96e734743a:1131:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\SM_5cbb0f422e264c8a9:1132:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\SM_8795fe36df7a4bf6b:1133:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\SM_c5b767869d8842e5a:1134:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\SM_c648e6ab382f45d1b:1135:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\SM_728e72cf36894b339:1136:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::test.local\\HealthMailbox2b984a7:1138:aad3b435b51404eeaad3b435b51404ee:90fcf26701d2940adc23490f350e1b1f:::test.local\\HealthMailbox2b984a7_history0:1138:aad3b435b51404eeaad3b435b51404ee:96646d086dd466ec94185a2c7b9c17fa:::test.local\\HealthMailbox2b984a7_history1:1138:aad3b435b51404eeaad3b435b51404ee:ad3ccf8843b45284fe51b8b99c133495:::test.local\\HealthMailbox2b984a7_history2:1138:aad3b435b51404eeaad3b435b51404ee:c8e99d5df4d516be61317256509e2275:::test.local\\HealthMailbox2b984a7_history3:1138:aad3b435b51404eeaad3b435b51404ee:5ac3f429bde2a0965374d11b48bfd754:::test.local\\HealthMailbox2b984a7_history4:1138:aad3b435b51404eeaad3b435b51404ee:6c6fc37ceaacc4c16e4b9cffb8bb6078:::test.local\\HealthMailbox2b984a7_history5:1138:aad3b435b51404eeaad3b435b51404ee:d00738549e4a7d7df058c74b6f7e95d0:::test.local\\HealthMailbox2b984a7_history6:1138:aad3b435b51404eeaad3b435b51404ee:c8c128137b9d3af02ca2eb5a14d1eb5c:::test.local\\HealthMailbox2b984a7_history7:1138:aad3b435b51404eeaad3b435b51404ee:086ad625acdf6418726ee80fbe77bac1:::test.local\\HealthMailbox2b984a7_history8:1138:aad3b435b51404eeaad3b435b51404ee:47bce15df4f1b7542e9800c33bf25bba:::test.local\\HealthMailbox2b984a7_history9:1138:aad3b435b51404eeaad3b435b51404ee:6da377d04f52cdcd7b5378ce316452f5:::test.local\\HealthMailbox2b984a7_history10:1138:aad3b435b51404eeaad3b435b51404ee:d02a7132b0d76ccfbe14e84a09eaf9bb:::test.local\\HealthMailbox2b984a7_history11:1138:aad3b435b51404eeaad3b435b51404ee:fb0c2e03ae66feb701dd091fe2273235:::test.local\\HealthMailbox2b984a7_history12:1138:aad3b435b51404eeaad3b435b51404ee:057f521daecf81a740c2ee06080c6b3d:::test.local\\HealthMailbox2b984a7_history13:1138:aad3b435b51404eeaad3b435b51404ee:b7da54d4b875423a8e3aad2d2dc21254:::test.local\\HealthMailbox2b984a7_history14:1138:aad3b435b51404eeaad3b435b51404ee:e33159ef9ffcc6244f203ac2a0d3219e:::test.local\\HealthMailbox2b984a7_history15:1138:aad3b435b51404eeaad3b435b51404ee:1e1064142039eea0c5430bd331bd397a:::test.local\\HealthMailbox2b984a7_history16:1138:aad3b435b51404eeaad3b435b51404ee:d7370fcf3fcb56df7904b31f4e9a0231:::test.local\\HealthMailbox2b984a7_history17:1138:aad3b435b51404eeaad3b435b51404ee:93f1687c33c8bd447ccae732023656ff:::test.local\\HealthMailbox2b984a7_history18:1138:aad3b435b51404eeaad3b435b51404ee:4b74de4285f91b74534b6e48f24f051d:::test.local\\HealthMailbox2b984a7_history19:1138:aad3b435b51404eeaad3b435b51404ee:0011c835e6069a928b383229e8a97a5d:::test.local\\HealthMailbox2b984a7_history20:1138:aad3b435b51404eeaad3b435b51404ee:ad1445b5de261685ffae8d9fc3328c23:::test.local\\HealthMailbox2b984a7_history21:1138:aad3b435b51404eeaad3b435b51404ee:3ac2a81cc32220229d172a02959feff6:::test.local\\HealthMailbox2b984a7_history22:1138:aad3b435b51404eeaad3b435b51404ee:b681bd5621aa94626699cc20309e40a2:::test.local\\HealthMailbox5df812c:1139:aad3b435b51404eeaad3b435b51404ee:ad1b5c6c9f429b9d8da03b2f513bfb21:::test.local\\HealthMailbox5df812c_history0:1139:aad3b435b51404eeaad3b435b51404ee:8d70f5913a3f8f4230c198b6bd21bea4:::test.local\\HealthMailbox5df812c_history1:1139:aad3b435b51404eeaad3b435b51404ee:48c53f8e86480200501c0319ce48e600:::test.local\\HealthMailbox5df812c_history2:1139:aad3b435b51404eeaad3b435b51404ee:c6537dcddf1760d0b0ac1f8713b36077:::test.local\\HealthMailbox5df812c_history3:1139:aad3b435b51404eeaad3b435b51404ee:a9a22c02adfde8a7eb0fa5b87ed6bb46:::test.local\\HealthMailbox5df812c_history4:1139:aad3b435b51404eeaad3b435b51404ee:efac50761f947e690d55dc4189a36ca4:::test.local\\HealthMailbox5df812c_history5:1139:aad3b435b51404eeaad3b435b51404ee:f0983ac73f9b5f9cee165d6325c890cc:::test.local\\HealthMailbox5df812c_history6:1139:aad3b435b51404eeaad3b435b51404ee:a3803c33699c57445e70ed1ffcfd4468:::test.local\\HealthMailbox5df812c_history7:1139:aad3b435b51404eeaad3b435b51404ee:a76d66b799a1d82b9bfcf4636c8d584a:::test.local\\HealthMailbox5df812c_history8:1139:aad3b435b51404eeaad3b435b51404ee:098d09cf2e2074e2ccdb96f367c1bd2f:::test.local\\HealthMailbox5df812c_history9:1139:aad3b435b51404eeaad3b435b51404ee:8cdb552145ea464c6d89bc632110d88b:::test.local\\HealthMailbox5df812c_history10:1139:aad3b435b51404eeaad3b435b51404ee:9713b241407e2040e136928da279549f:::test.local\\HealthMailbox5df812c_history11:1139:aad3b435b51404eeaad3b435b51404ee:d50f1011dc2c12cc8432863a7063e321:::test.local\\HealthMailbox5df812c_history12:1139:aad3b435b51404eeaad3b435b51404ee:d00fd65e652c1fe3fadb8cb78201bd89:::test.local\\HealthMailbox5df812c_history13:1139:aad3b435b51404eeaad3b435b51404ee:15606e583f3782eaa98a208064d338e5:::test.local\\HealthMailbox5df812c_history14:1139:aad3b435b51404eeaad3b435b51404ee:c9e28fc8269eb9ec099800a5ebe2d61a:::test.local\\HealthMailbox5df812c_history15:1139:aad3b435b51404eeaad3b435b51404ee:4514033f5aec6fdf33eb4ed294618c6a:::test.local\\HealthMailbox5df812c_history16:1139:aad3b435b51404eeaad3b435b51404ee:198b9ca801cbff5119b6b7c6041d0e15:::test.local\\HealthMailbox5df812c_history17:1139:aad3b435b51404eeaad3b435b51404ee:9e5194eba3de209ddbbf9d4346492ab4:::test.local\\HealthMailbox5df812c_history18:1139:aad3b435b51404eeaad3b435b51404ee:6ee9d43393d4f30bf92c88f27571105a:::test.local\\HealthMailbox5df812c_history19:1139:aad3b435b51404eeaad3b435b51404ee:d2f30d1ab08574c2697a4596c55d5254:::test.local\\HealthMailbox5df812c_history20:1139:aad3b435b51404eeaad3b435b51404ee:c9a5d166b9790e5371105aa013b1165b:::test.local\\HealthMailbox5df812c_history21:1139:aad3b435b51404eeaad3b435b51404ee:e23674dea3a697e21f8c800a0e81d4ad:::test.local\\HealthMailbox5df812c_history22:1139:aad3b435b51404eeaad3b435b51404ee:0cf28552d306144935f688187d53cfa1:::test.local\\HealthMailbox3b3738b:1140:aad3b435b51404eeaad3b435b51404ee:5ae4cbd737c56ae1200e27f1613152ef:::test.local\\HealthMailbox92ad4b5:1141:aad3b435b51404eeaad3b435b51404ee:8a72893d2524ec7250665dc774309ef0:::test.local\\HealthMailbox32c7bf8:1142:aad3b435b51404eeaad3b435b51404ee:a6da9aacd86610c09b8092fc80b828d0:::test.local\\HealthMailbox57b62f5:1143:aad3b435b51404eeaad3b435b51404ee:32fa33f6fce1c88d17b0f2461ddc14bf:::test.local\\HealthMailbox18342c7:1144:aad3b435b51404eeaad3b435b51404ee:0ac5b6fd8216905ce1bf6c8728a03eac:::test.local\\HealthMailbox2d4e04f:1145:aad3b435b51404eeaad3b435b51404ee:42b6fb14d0650f80148d5a20dc12f77e:::test.local\\HealthMailbox247d46e:1146:aad3b435b51404eeaad3b435b51404ee:d403e27a987b8bc0e56c74ea4b337d09:::test.local\\HealthMailbox364422e:1147:aad3b435b51404eeaad3b435b51404ee:38716e3d1eabfc27eeffc559d0dffbef:::test.local\\HealthMailboxd9284e9:1148:aad3b435b51404eeaad3b435b51404ee:a355b106550b9ac7871ed534b101a1f6:::test1:1149:aad3b435b51404eeaad3b435b51404ee:8cbbbea6034f5c9ea6bc4eb980efec4d:::test1_history0:1149:aad3b435b51404eeaad3b435b51404ee:8cbbbea6034f5c9ea6bc4eb980efec4d:::test1_history1:1149:aad3b435b51404eeaad3b435b51404ee:8cbbbea6034f5c9ea6bc4eb980efec4d:::test1_history2:1149:aad3b435b51404eeaad3b435b51404ee:8cbbbea6034f5c9ea6bc4eb980efec4d:::test1_history3:1149:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::SDC$:1151:aad3b435b51404eeaad3b435b51404ee:9f40caf799bf0d110fdf08b3bf3eb6c0:::SDC$_history0:1151:aad3b435b51404eeaad3b435b51404ee:8f3cfaf7a6290b735bcbba5b60d554d4:::SDC$_history1:1151:aad3b435b51404eeaad3b435b51404ee:7bfe440904b9611776477b85eea398fc:::testnew$:1152:aad3b435b51404eeaad3b435b51404ee:c22b315c040ae6e0efee3518d830362b:::WIN-PJ6ELFEG09P$:1153:aad3b435b51404eeaad3b435b51404ee:6533cba50e01cace16567ec5691e587f:::testcomputer$:1154:aad3b435b51404eeaad3b435b51404ee:c22b315c040ae6e0efee3518d830362b:::t$:1155:aad3b435b51404eeaad3b435b51404ee:c22b315c040ae6e0efee3518d830362b:::tt$:1156:aad3b435b51404eeaad3b435b51404ee:c22b315c040ae6e0efee3518d830362b:::WebApp01$:1157:aad3b435b51404eeaad3b435b51404ee:b021fa4e92913d91a6eade97884f508b:::aaa:1158:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::[*] Kerberos keys from .\\ntds.dittest.local\\Administrator:aes256-cts-hmac-sha1-96:bf735a3948b1284821574a0044a703548465e61057dd1a7768325e8aad06ae5etest.local\\Administrator:aes128-cts-hmac-sha1-96:bd93e3242d1a346f4d2280ac3c33f965test.local\\Administrator:des-cbc-md5:1f4cef4cabf20298Admin:aes256-cts-hmac-sha1-96:f3ee9e3911e4dcbd686dc73b2a70c6d7762fff9ffeb304d62410b5f2464a5884Admin:aes128-cts-hmac-sha1-96:40877736a0a837a3b9563fd4f12e72f5Admin:des-cbc-md5:cddcea70e6a4c29dtest:aes256-cts-hmac-sha1-96:3a4b7dc7e441d73726adbb1921e79ba65a8895d74887e04df9eaef3869207ee9test:aes128-cts-hmac-sha1-96:98bf9049e7f51e8e7d8f461aa8d9ec70test:des-cbc-md5:e3986db31051c154PDC$:aes256-cts-hmac-sha1-96:3a1cff1c3cbbc08e6c4014cc629f2a3d8a31b6dec5759f6f0859d0bfe6506182PDC$:aes128-cts-hmac-sha1-96:05de7789ce4233c3fb1117b864cd8644PDC$:des-cbc-md5:9dadcb61688a2367krbtgt:aes256-cts-hmac-sha1-96:ce69418e93cd64b771e562ac73ae00b9922fe6c83fa1e82219400e2bb48ed400krbtgt:aes128-cts-hmac-sha1-96:319f7c87ba483f25f5e4f7b2ee0cf6c1krbtgt:des-cbc-md5:8a264ad932f23704EXCHANGE$:aes256-cts-hmac-sha1-96:7998677a5c8ad1934b5a6043b9ffb4e7141412fce5a82358164d26b0b4b0d96aEXCHANGE$:aes128-cts-hmac-sha1-96:258731ffd04a5d78912db56def015af5EXCHANGE$:des-cbc-md5:0d10f88043bff491test.local\\HealthMailbox2b984a7:aes256-cts-hmac-sha1-96:2e2c606999ae65c838190eb3e42f268ff2c9e05b562057f4372052e5c418b141test.local\\HealthMailbox2b984a7:aes128-cts-hmac-sha1-96:d496728ddbcd54d5246033fc1e59b191test.local\\HealthMailbox2b984a7:des-cbc-md5:6423fe5eb3b354cetest.local\\HealthMailbox5df812c:aes256-cts-hmac-sha1-96:c7b35baa2d7c75dd729061c98a91262c674068ab46767da9549aa5bc9e0800c7test.local\\HealthMailbox5df812c:aes128-cts-hmac-sha1-96:4c60e6d2265f79ba7578d9e27479dfbftest.local\\HealthMailbox5df812c:des-cbc-md5:b94cb3ba0d927691test.local\\HealthMailbox3b3738b:aes256-cts-hmac-sha1-96:6b463387e784265bde6ea1a73c553d6e8cfe12b22fb1fe0439dd4ccba6784306test.local\\HealthMailbox3b3738b:aes128-cts-hmac-sha1-96:a36192139b393b469db8ecc4401bb5batest.local\\HealthMailbox3b3738b:des-cbc-md5:ad43043d623eb040test.local\\HealthMailbox92ad4b5:aes256-cts-hmac-sha1-96:2a757f18b3b8d02f9980f9dda081a524e865b2d3a531dcb3c5c146e1cbd7d55atest.local\\HealthMailbox92ad4b5:aes128-cts-hmac-sha1-96:968429cdd9464bcf9e0fde47b136447dtest.local\\HealthMailbox92ad4b5:des-cbc-md5:4683e34ca74af710test.local\\HealthMailbox32c7bf8:aes256-cts-hmac-sha1-96:e95d8fd1c2920c19722892bf5e8dfa8846360994f4484c043b04eff000ecd14etest.local\\HealthMailbox32c7bf8:aes128-cts-hmac-sha1-96:1d61443a6254596bd8fb3d697221d710test.local\\HealthMailbox32c7bf8:des-cbc-md5:ef8a4f203e808501test.local\\HealthMailbox57b62f5:aes256-cts-hmac-sha1-96:1713fdd614d9cd173c0b2a54db2d52d013c803bf125584db2c3f163aeaf22c03test.local\\HealthMailbox57b62f5:aes128-cts-hmac-sha1-96:9390dcff5cc2227274a7148e798d0174test.local\\HealthMailbox57b62f5:des-cbc-md5:460d98a4204ab6f2test.local\\HealthMailbox18342c7:aes256-cts-hmac-sha1-96:887d6b5d170b1bac1372631e80a32a732d1ea8985239b48297392aa738a95300test.local\\HealthMailbox18342c7:aes128-cts-hmac-sha1-96:7646f506daa562e686d6c2aefc920b16test.local\\HealthMailbox18342c7:des-cbc-md5:3189bfa47c836d4ftest.local\\HealthMailbox2d4e04f:aes256-cts-hmac-sha1-96:57afad1952342893df8277fcc66e8424c77fdedf7bcdc5fc10c1b9ad7e54bdf1test.local\\HealthMailbox2d4e04f:aes128-cts-hmac-sha1-96:1934ccdefa73b2d48f007a97f7720743test.local\\HealthMailbox2d4e04f:des-cbc-md5:15c464a7abb36e5etest.local\\HealthMailbox247d46e:aes256-cts-hmac-sha1-96:219f9c118ae6cc7217e0e3545e39e9bdfb6b207e7c91d8f35cad89bd1ec3ea8btest.local\\HealthMailbox247d46e:aes128-cts-hmac-sha1-96:10b8531f9555d0ecfcc7527d7bc90246test.local\\HealthMailbox247d46e:des-cbc-md5:d07525b029cb6d46test.local\\HealthMailbox364422e:aes256-cts-hmac-sha1-96:a96b346f39ace3cf939d1b8baba23d652405183300911133fae1929cd1869d05test.local\\HealthMailbox364422e:aes128-cts-hmac-sha1-96:5f081757425ad99ea78280bbd8102290test.local\\HealthMailbox364422e:des-cbc-md5:20b51cd623efd558test.local\\HealthMailboxd9284e9:aes256-cts-hmac-sha1-96:bbdb9ddc9c2317044a670859428947f69e082457f41f52e40ce8b05ab9cf79d4test.local\\HealthMailboxd9284e9:aes128-cts-hmac-sha1-96:9860afcea4db56c2c1fcf62a3f827e68test.local\\HealthMailboxd9284e9:des-cbc-md5:1aeaba45202a8fd9test1:aes256-cts-hmac-sha1-96:255dc456b3fb5c7e0a30af8dc9a6848b2a52632df368848fbe3de66af02a4b39test1:aes128-cts-hmac-sha1-96:79089681b69f42be4a848f5ba97089e9test1:des-cbc-md5:f7ce86ba13d5974aSDC$:aes256-cts-hmac-sha1-96:8ae566481e35184fbe4527e7dd1994ef578d1b2193902a0524d2d7eb521fc546SDC$:aes128-cts-hmac-sha1-96:dbe510adea502b051456ab9b87b3dcc3SDC$:des-cbc-md5:796d20cb864cda3etestnew$:aes256-cts-hmac-sha1-96:3cb7277d0b9a55772d676b05b8e4fe1cef5cf2ac2a771b3694f8140cf251ced2testnew$:aes128-cts-hmac-sha1-96:ff6f396cde3a83d0f92ba5c41c4398dbtestnew$:des-cbc-md5:fbd37375d03e8fefWIN-PJ6ELFEG09P$:aes256-cts-hmac-sha1-96:6ba5adb397e3b0745e8fc99ec1ef760765fabc72db61aac7fa85180b81255bbcWIN-PJ6ELFEG09P$:aes128-cts-hmac-sha1-96:dd628a4f9010e06d9e28bdfbb05bba8aWIN-PJ6ELFEG09P$:des-cbc-md5:85cee3a2e5a1a876testcomputer$:aes256-cts-hmac-sha1-96:5aab1f9bd51d922662b0fb6629d2f19c021d39ce61ce3e1e0e78c30fe262323ftestcomputer$:aes128-cts-hmac-sha1-96:6d63db940d8a6184c819fe28a2bb941btestcomputer$:des-cbc-md5:19c2a80d6e86c26bt$:aes256-cts-hmac-sha1-96:2ecec9c280c2b5a9194a188347f574f978effb1a081788d18336008ff6d82301t$:aes128-cts-hmac-sha1-96:8db3c242e61039c65cc4ec3e718b4f6et$:des-cbc-md5:bc15fd7a4fea73batt$:aes256-cts-hmac-sha1-96:5e29f4025707d663a2f01a37be180eb16aefa1922f33746f884f54d3c3659662tt$:aes128-cts-hmac-sha1-96:fcbe0e3fb7c4115dd587cf399d80ff8btt$:des-cbc-md5:8a153467f7dcba92WebApp01$:aes256-cts-hmac-sha1-96:694654793ec838d03449774b13614c829cb67e098c6f49d54c2d106dd06f36f7WebApp01$:aes128-cts-hmac-sha1-96:41dbcb4199062f8e5032c7c389f9671bWebApp01$:des-cbc-md5:3efbe56e9246fb62aaa:aes256-cts-hmac-sha1-96:fdca7a6a5d3697843ded80744f15a70492b941e5af1e91bf5ebd5f372a3ce6b4aaa:aes128-cts-hmac-sha1-96:d853c22fb51e8d65f7eb84a07c7b5a9faaa:des-cbc-md5:0d572cfe46a41cf1[*] Cleaning up...\n\n获得flag\n参考WP2022蓝帽杯初赛wp_是Mumuzi的博客-CSDN博客\n[2022第六届蓝帽杯初赛writeup_小蓝同学&#96;的博客-CSDN博客](https://blog.csdn.net/qq_49422880/article/details/125703696)\n第六届蓝帽杯全国大学生网络安全技能大赛-初赛部分WriteUp | CN-SEC 中文网\n","categories":["比赛WP","2022蓝帽杯","misc"]},{"title":"GXYCTF2019_simple_CPP","url":"/2022/10/23/GXYCTF2019-simple-CPP/","content":"知识考察c++语言的基本语法\nz3求解器的使用\n查壳\n64位程序，无壳\n开始逆很容易找到main函数\n\n可以看到我们输入的值，存入了input(已改名)中，还可以看出输入的长度为30。\n\n这里有一个异或操作，输入的input和一串字符异或，查看字符为什么\n\n全为0，这是很不正常的，可能需要动调一下，之后在试\n\n首先还是检查长度 0&lt;len&lt;30\n之后的函数是，将字符串（字符对应的数值）转化尾大整数存储 例：‘abz’ -&gt;61 62 7a-&gt; 61617a\n这里以8个字节为一组存储，v16存前8位字符的数值、v15存第9~16位…. 这样子,不足补零\n\n后面这里将v16,v15,v14,v13存在一个数组v20中\n\n接下来对v20进行很多操作，这里可以用z3求解一下的v20的值，这题差不多就分析完了\n求解动调一下\n\n得字符串\n\n写一下z3代码\nfrom z3 import*x,y,z,w=BitVecs(&#x27;x y z w&#x27;,64)s=Solver()s.add((~x)&amp;z==1176889593874)s.add(4483974544037412639^w==4483974543195470111)s.add(((z&amp;~y)&amp;x|z&amp;((x&amp;y)|y&amp;~x|~(y|x)))==577031497978884115)s.add(((z&amp;~x)|(x&amp;y)|(z&amp;~y)|(x&amp;~y))==4483974544037412639)s.add(((z&amp;(~x)) | (x&amp;y) | y &amp; z) == (((~x)&amp; z)|864693332579200012))s.check()m=s.model()for i in m:    print(&quot;%s = 0x%x&quot;%(i,m[i].as_long()))\n\n\n将这些大整数一个一个字节得提取出来得未叠加过的字符串值，和动调出得字符串异或一遍后得flag\n# tem=&#x27;i_will_check_is_debug_or_not&#x27;tem=[  0x69, 0x5F, 0x77, 0x69, 0x6C, 0x6C, 0x5F, 0x63, 0x68, 0x65,   0x63, 0x6B, 0x5F, 0x69, 0x73, 0x5F, 0x64, 0x65, 0x62, 0x75,   0x67, 0x5F, 0x6F, 0x72, 0x5F, 0x6E, 0x6F, 0x74]flag=[0x3E,0x3A,0x46,0x05,0x33,0x28,0x6F,0x0D,0x8C,0x00,0x8A,0x09,0x78,0x49,0x2C,0xAC,0x08,0x02,0x07,0x17,0x15,0x3E,0x30,0x13,0x32,0x31,0x06]for i in range(len(flag)):    flag[i]=flag[i]^tem[i%27]    print(chr(flag[i]),end=&#x27;&#x27;)\n\n\n但这个算出来flag是不对的，好似原因是多解问题但我试了很多遍结果唯一，需要有提示才能得真正得解\n y&#x3D;e!P0or_a  比赛方的提示 打多刷题平台都没有提示，只有当时打比赛的人才知道\nflag = We1l_D0ne!P0or_algebra_am_i\n\n","categories":["刷题记录","BUUCTF","re"]},{"title":"《C++反汇编与逆向分析》学习","url":"/2022/10/25/%E3%80%8AC-%E5%8F%8D%E6%B1%87%E7%BC%96%E4%B8%8E%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E3%80%8B%E5%AD%A6%E4%B9%A0/","content":"第四章 观察各种表达式的求值过程4.1、算数运算和赋值4.1.1 各种算术运算的工作形式\n加法加法运算对应的汇编语言是ADD。但在实际运用中编译器会考虑转化效率，优化代码。优化方案有：常量传播，常量折叠。常量传播：将编译期间可计算出结果的变量转换成变量，这样就减少了变量的使用。\n例如：\nint n=1;printf(&quot;%d&quot;,n);//变量n在编译期间就可以计算出结果，因此，在程序中在引用n的地方会直接使用常量1代替printf(&quot;%d&quot;,1);\n\n常量折叠：当出现多个常量进行计算，且编译器可以在编译期间计算出结构时，源码中的所有的常量计算都将被计算结果代替。\nint n =5+3*4+1;printf(&quot;%d&quot;,n);//当多个常量进行运算时，编译器会在编译期间计算出结果，源码中的所有的常量计算都会被计算结果替代int n =18;printf(&quot;%d&quot;,n);//在因为n是个常量，编译时会产生常量传播printf(&quot;%d&quot;,18);\n\n减法减法运算对应的汇编指令SUB减法操作一般通过补码的方式将减法转变位加法。当加数为负数时，执行的并非为加法而是减法\n;n1=n1-100mov edx,[ebp-4]sub edx,64hmov [ebp-4],edx\n\n\n\n乘法乘法运算对应的汇编指令分为有符号imul和无符号mul由于乘法指令执行周期较长，编译器在编译期间会先尝试将其转化成加法，或使用位移等周期较短的指令。有符号数乘以常量值，且常量非2的时，会直接使用有符号数乘法imul指令或者左移加减进行优化。\n当常量为2的幂时，编译器会采用执行周期较短的左移运算代替乘法指令\n;n1*15 变量乘常量（常量值非2的幂imul edx,[ebp-4],0Fh \t\t;edx=n1*15;n1*16 变量乘常量（常量值为2的幂shl eax,4;n2*4+5 混合运算lea edx,ds:5[ecx*4]\t\t\t;lea指令是取内存地址index，&#x27;ds:[index]&#x27;表示index地址上的数据;n1*n2 变量相乘mov eax [ebp-4]imul eax,[ebp-8]\n\n\n\n除法除法运算对应的指令分为有符号的idiv和无符号div除法指令执行周期长，效率低，编译器会先想办法转化为其他指令代替a、除数为无符号2的幂\n;(unsigned)n/4shr eax,4\t\t;eax=eax&gt;&gt;4\n\nb、除数为无符号非2的幂(上)\n;(unsigned)n/3mov eax,0AAAAAAABH\t\t\t;eax=Mmul dword ptr [esp+4]\t\t;无符号乘法 (edx*16+eax)*n\tshr edx,1\t\t\t\t\t;无符号右移\tedx=n*M&gt;&gt;32&gt;&gt;1 \n\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"数据结构之线性表","url":"/2022/08/30/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%BF%E6%80%A7%E8%A1%A8/","content":"线性表的基本概念线性表的定义线性表是具有相同数据类型的n个数据元素的有限序列。\n其中，当n&#x3D;0是成为空表。\n线性表的特点\n对于一个非空的线性表，有且仅有一个开始结点(a1),它没有直接前驱。\n有且仅有一个终端结点(an),它没有直接后继。\n除了开始结点和终端结点以外，其余的结点有且仅有一个直接前驱和一个直接后继。\n\n线性表的基本操作（逻辑结构层次）\n初始化线性表InitList(L).初始化条件：表不存在。操作结果：其作用是建立一个空表L.\n求线性表的长度GetLength(L)初始条件：线性表L存在。操作结果：返回线性表的L的长度。\n按照位置查找元素GetElem(L,i,x)。初始条件：线性表L存在，i是表中元素的位置，x是找到该元素的返回值。操作结果：在线性表中查找第i位的元素，有，则利用x返回该元素，并返回1；否则返回0。\n按照数值查找元素Locate(L,x)初始条件：线性表L存在，x是给定的一个待查的数值元素。操作结果：在线性表L中查找与x数值相同的元素，若线性表中存在一个或多个这样的元素，则返回元素所在位置的最小值或地址值；否则返回0或NULL.\n插入操作InsElem(L,i,x)初始条件：线性表存在，并且插入位置正确.操作结果：在作用是在线性表的第i位置插入一个值为x的新元素，使得线性表长度+1\n删除操作DelElem(L,i,x)初始条件：线性表存在，并且删除位置正确.操作结果：在作用是删除线性表在第i位置上的元素并用x将其储存，使得线性表长度-1\n显示操作DisList(L)初始条件：线性表存在，且非空。操作结果：依次扫描线性表L,并输出各个元素的值。\n等等。。。\n\n线性表的存储顺序表","categories":["刷题记录","BUUCTF","misc"]},{"title":"王爽汇编语言总结","url":"/2022/10/25/%E7%8E%8B%E7%88%BD%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E6%80%BB%E7%BB%93/","content":"\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"Minesweeper","url":"/2022/10/27/Minesweeper/","content":"先查壳\n发现是用C#写的，用dnspy打开\n开始逆\nprogram类是函数的入口\n\n发现直接跳转到MainForm类中去了\n观察mainform的主要逻辑\n\n  SquareRevealedCallback观看命名是一个回调函数\n通过动调发现这个回调函数会对我们点击雷区有反应\n\n当我们踩到雷时弹出失败的弹窗，就是这里调用的失败弹窗，合理猜测下面那个就是成功的弹窗。\n比较简单的方法，我们可以注释掉这段if判断，就会不会调用失败弹窗，直到我们测出所有雷，跳出成功弹窗，先按下不表。\n接着看  mainform 中调用这个函数AllocateMemory\n\n两层循环 30*30 应该是个产生雷阵的函数，题中提到 一共有897雷，只有3处没雷，那三处就是关键\n易知，有雷的地方 flag&#x3D;true \n当满足if判断时 flag &#x3D; false 这个就是我们要找的地方\n\nVALLOC_NODE_LIMIT &#x3D; 30是个常数\nr,c 对应雷阵的行和列\n\n这边要匹配的三个数也是常数，则三处没雷区是个定值 \n求解我先试试最简单的方法，直接失败的判断注释掉\n\n右键编辑方法，注释完后保存\n此时可以发现不会有失败的界面了\n\n\n可以找出这三个无雷区，但是flag是乱码，说明有检测手段，或者，那段判断中有运算影响flag，但不重要，因为三个无雷区是定值，不会变，我们打开原来没有改过的程序，精准找出这三个点，就可得flag\n\n另外，我们试试用脚本找\n#include&lt;stdio.h&gt;void main()&#123;    int i,j;    for(i=0;i&lt;=30;i++)        for(j=0;j&lt;=30;j++)            if(~((i+1)*30+(j+1))==0xFFFFFC80||~((i+1)*30+(j+1))==0xFFFFFD81||~((i+1)*30+(j+1))==0xFFFFFEF2)            printf(&quot;%d %d \\n&quot;,i+1,j+1);&#125;\n\n\n同样可以找到三个无雷区位置\n参考文献*Microsoft Word - FlareOn5_Challenge2_Solution.docx (fireeye.com)\n[BUUCTF–FlareOn5]Ultimate Minesweeper - Hk_Mayfly - 博客园 (cnblogs.com)\n"},{"title":"制作Linux内存镜像+制作对应的volatility_profile","url":"/2022/11/06/%E5%88%B6%E4%BD%9CLinux%E5%86%85%E5%AD%98%E9%95%9C%E5%83%8F-%E5%88%B6%E4%BD%9C%E5%AF%B9%E5%BA%94%E7%9A%84volatility-profile/","content":"2022祥云杯出了一道需要自己构建新版本内核的题。之前都没有遇到过取证Linux内存的题，大多是Windows系统的内存取证。\nvolatility工具只自带Windows系统 profile ,Linux 需要自己添加。\n识别Linux内存映像的内核版本利用string指令，提取出被dump出来的文件的系统内核的版本是什么。\nstrings 1.mem | grep &quot;Linux version&quot;  \n\n\n\nLinux version 5.4.0-84-generic (buildd@lcy01-amd64-007) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #94~18.04.1-Ubuntu SMP Thu Aug 26 23:17:46 UTC 2021 (Ubuntu 5.4.0-84.94~18.04.1-generic 5.4.133)Linux version 5.4.0-84-generic (buildd@lcy01-amd64-007) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #94~18.04.1-Ubuntu SMP Thu Aug 26 23:17:46 UTC 2021 (Ubuntu 5.4.0-84.94~18.04.1-generic 5.4.133)(however the Linux version lacks some of the features of Windows and Mac version). (however the Linux version lacks some of the features of Windows and Mac version). Linux version %d.%d.%d&lt;p&gt;This is the GNU/Linux version of the popular PasswordSafe password manager, originally designed by the renowned security technologist Bruce Schneier and open sourced in 2002.&lt;/p&gt;&lt;p&gt;This is the GNU/Linux version of the popular PasswordSafe password manager, originally designed by the renowned security technologist Bruce Schneier and open sourced in 2002.&lt;/p&gt;MESSAGE=Linux version 5.4.0-84-generic (buildd@lcy01-amd64-007) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #94~18.04.1-Ubuntu SMP Thu Aug 26 23:17:46 UTC 2021 (Ubuntu 5.4.0-84.94~18.04.1-generic 5.4.133)Linux version 5.4.0-84-generic (buildd@lcy01-amd64-007) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #94~18.04.1-Ubuntu SMP Thu Aug 26 23:17:46 UTC 2021 (Ubuntu 5.4.0-84.94~18.04.1-generic 5.4.133)\n\n这里可以看到祥云杯附件Linux kernel是5.4.0-84-generic\n而这个内核版本只有ubuntu18.04以下的才能下载使用 我之前一直用的是20.04 搞了很久 浪费很多时间\n可以使用以下命令查看已经安装的内核镜像\ndpkg --get-selections |grep linux-image\nxhc@ubuntu:~/Desktop/volatility$ dpkg --get-selections |grep linux-imagelinux-image-5.4.0-131-generic\t\t\tinstalllinux-image-5.4.0-84-generic\t\t\tinstalllinux-image-5.4.0-84-lowlatency\t\t\tinstalllinux-image-generic-hwe-18.04\t\t\tinstall\n\n\n\n此时我是 已经下载好了linux-image-5.4.0-84-generic，正常是没有的\n利用下面命令下载需要的内核版本，x根据自己需求替换\nsudo apt install linux-image-x.x.x-xx-lowlatency linux-headers-x.x.x-xx-lowlatency\n\n替换内核版本接下来就是替换内核版本，这里说说我的Ubuntu18.04切换切换内核的方法\n执行下面的命令可以选择内核版本启动\nvim /etc/default/grub\n\n\n设置完成后：\nsudo update-grubsudo reboot\n\n\n选择 advanced options\n\n在选择我们需要的内核版本启动\n构建过程安装build-essential和dwarfdump(调试文件导出工具)，/boot目录下找到该System.map.xx文件包含系统的符号信息。\nsudo apt install build-essential dwarfdumpcd volatility/tools/linuxmakesudo zip ./volatility/plugins/overlays/linux/Ubuntu.zip ./tools/linux/module.dwarf /boot/System.map-`uname -r`\n\n执行完make后我们将得到一个module.dwarf文件，该文件包含了我们所需的内核调试信息。\n将moudle.dwarf以及system.map文件打包成一个zip文件，放在volatility/plugins/overlays/linux下。\n放在volatility/plugins/overlays/linux下之后查看info\nxhc@ubuntu:~/Desktop/volatility$ python vol.py --info|grep LinuxVolatility Foundation Volatility Framework 2.6.1LinuxUbuntux64        - A Profile for Linux Ubuntu x64LinuxAMD64PagedMemory          - Linux-specific AMD 64-bit address space.linux_aslr_shift           - Automatically detect the Linux ASLR shiftlinux_banner               - Prints the Linux banner informationlinux_yarascan             - A shell in the Linux memory image\n\nLinuxUbuntux64 即是我们新加的profile 此时我们就可以开始利用volatility 写题了\nvolatility取证Linux命令vol官方命令文档：https://github.com/volatilityfoundation/volatility/wiki/Linux-Command-Reference\nvolatility.exe –info|grep linux 可以看到所有命令，具体使用可以翻官方文档\n参考文章(6条消息) 制作Linux内存镜像+制作对应的volatility profile_shu天的博客-CSDN博客_内存镜像\n如何基于volatility2构建“新”版本内核的profile - 跳跳糖 (tttang.com)\n(6条消息) ubuntu18.04.4更换内核版本_小立爱学习的博客-CSDN博客_ubuntu18.04内核版本\n(6条消息) Ubuntu 安装指定内核的方法_dong_shi_bo_的博客-CSDN博客_ubuntu安装内核\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"《SoK:_Eternal_War_in_Memory》学习总结","url":"/2022/11/04/%E3%80%8ASoK-Eternal-War-in-Memory%E3%80%8B%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/","content":"文章概述SoK: Eternal War in Memory文章发表于2013年IEEE S&amp;P会议，第一作者是来自Stony Brook University的László Szekeres。本篇文章对（2013年）常见的内存攻击方式和防护措施做了系统的分析和介绍。众所周知，C&#x2F;C++程序中的内存破坏漏洞是最古老的漏洞之一，针对此问题诞生了众多防御方案，但目前采用的保护措施在实际攻击过程中都可以被解除或绕过。\n通过这篇系统化论文，有如下的贡献:\n\n针对Memory Corruption攻击构建通用模型，基于模型定义了多种可实施的安全策略。\n对比安全策略设计及漏洞利用各阶段特征，发现部分攻击向量未被现有防御机制保护。\n从性能、兼容性和可靠性评估及比较现有防御方案。\n讨论现有防御方案的缺点、未被实际应用的原因，讨论未来新防御方案设计所需满足的要求。\n\n攻击模型我们根据攻击模型图，查看有哪些攻击和怎么去防范。\n\n内存攻击当无效指针(越界指针或悬挂指针)  （1）被解引用或读写时（2） 将导致内存安全被破坏（数据破坏，信息泄露），内存安全是各类攻击的根源。\n其中解引用无效指针可以分两种情况：\n解引用越界指针会导致spatial error（破坏空间安全）\n解引用悬挂指针会导致temporal error（破坏时间安全）\n无效指针的成因（①）out-of-bounds pointer\n未对allocation failure检查使得null pointer被使用\n数组指针递增递减导致buffer overflow&#x2F;underflow（缓冲区上溢&#x2F;下溢）\nindexing bugs（例如：integer overflow, truncation or signedness bug, or incorrect pointer casting）\n\ndangling pointer\n异常处理程序处理对象时，释放了指针但未对此重新初始化，指针悬挂。\n全局指针指向某函数内的局部变量。（函数调用结束时，局部变量的空间被释放，指针悬挂）这种漏洞被称作useafter-free漏洞。\n\n无效指针解引用的后果（②）越界指针解引用（读、写）导致Spatial Error\n使用指针从越界&#x2F;攻击者控制区域读取内容，导致Value Corruption，例如：\n\n未检查从攻击者指定变量（直接&#x2F;间接）读取的值，导致Data Corruption（进而可能导致控制流劫持）\n攻击者指定读指针内容被输出，构成信息泄露\n\n使用指针写内容到越界&#x2F;攻击者控制区域，导致内存覆写，例如：\n\n缓冲区溢出覆写数组指针使其越界，指针越界导致虚表破坏，被篡改的虚表解引用导致控制流劫持\nFree攻击者控制的指针导致任意地址写\n使用越界指针写操作导致信息泄露\n\nDangling指针解引用（读、写）导致Temporal Error\n使用dangling指针读（dangling指针所指新旧对象不匹配），导致攻击者非法访问内存，例如：\n\n当旧对象dangling指针指向新对象（与dangling指针所指内容被修改略有不同），旧对象虚函数被调用时，会查询虚函数，使用新对象值，导致虚函数corruption。此处temporal read error与spatial write error一样导致vtable破坏。\n此外，新对象内容在读取旧对象dangling指针操作时泄露。\n\n使用dangling指针写，如越界指针一样破坏新对象中的指针或数据，例如：\n\nDangling指针指向局部变量或栈，对其写操作可能导致（后续新栈帧）返回地址等敏感数据覆写\nDouble-free是use-after-free的特例，悬空指针将被用于调用free()函数，此时新对象的内容将被错误的解释为元数据，这样将可以被任意数据的写\n\ncode corruption attack内存安全破坏（①、②）能够直接修改内存代码（③），从而执行攻击者想要执行得代码（④），此时就会产生 code corruption attack .\n代码完整性保护（③）通过将包含代码的内存页设定为只读页，可以很好的防范此类攻击。\n但是对于自修改代码（selfmodifying code）和及时编译（Just-In-Time  compilation）的情况，此策略就无能为力了。\nInstruction Set Randomization (ISR)技术可以减轻代码注入执行可能性和现有代码的破坏。但是由于效率太低，一般不会采用。\nControl-flow hijack attack当执行了代码完整性的策略后，攻击者就会尝试使用内存安全破坏（①、②）修改代码指针（③）指向（恶意的）shellcode&#x2F;gadgets（④），并让跳转指令目标为被篡改的代码指针（⑤），成功执行shellcode&#x2F;gadgets（⑥），从而成功劫持控制流。\n代码指针完整性保护旨在保护代码指针不被破坏（③）。地址空间随机化技术（Address Space Randomization）让攻击者难以将代码指针指向shellcode&#x2F;gadgets（④）。控制流完整性(Control-flow Integrity)保护旨在检测间接跳转处的corruption（⑤）。Non-executable Data（不可执行数据，W⊕X，程序内容要么可写，要么可执行）和指令集随机化(ISR)拒绝shellcode&#x2F;gadgets被执行（⑥）。\nJump Oriented Programming（面向跳转编程，包括”return-to-libc” attack，Return Oriented Programming）通过重写现存的代码并将其通过指令链接起来并执行，可以绕过W⊕X和ISR的保护（⑥）\n此外若要让攻击更具意义，攻击者通常需要进行系统调用、提权（例如文件访问）等。权限、强制访问控制、沙箱策略（SFI、 XFI、Native Client）能限制攻击者所攻陷程序的能力，但本文所关注的是如何保护程序不被攻陷。\nData-only attack内存安全破坏（①、②）能篡改安全关键数据变量（包括代码、代码指针）（当然安全关键是语义定义，实际上需要保护所有变量完整性）（③），让数据修改为攻击者指定值（④），当该数据被使用时（⑤），data-only attack成功。\n数据完整性（自然包括代码、代码指针完整性保护）保护旨在保护数据不被篡改（③），数据空间随机化（包括地址空间随机化）对数据引入额外的熵值，使攻击者无法使用指定数据（无法正确验证）（④），数据流完整性保护（包括控制流完整性保护）检测数据流是否被破坏。\nInformation leak内存安全破坏（①、②）能输出（③）攻击者指定的内存数据（④）。\n信息泄露能被用来绕过ASLR（Address Space Layout Randomization 技术就是通过加载程序的时候不再使用固定的基址加载，从而干扰shellcode定位的一种保护机制。）等概率性防御技术。\n全面的数据空间随机化旨在防止攻击者成功地将数据泄露（④）\n常用的防御方案及实际的漏洞利用现在最常用的的防范措施有：stack smashing protection, DEP&#x2F;W⊕X and ASLR.\nStack smashing protection &#x2F; 控制流完整性保护方案（⑤）Stack smashing protection，SafeSEH、SEHOP可以在间接跳转时检查代码指针（返回地址和异常处理句柄，此例未涉及保护虚表和函数指针）\n但是他们有缺点，由于他们只保护一些特殊的指针（即堆栈上返回地址和异常处理程序指针），所以可以被绕过的。\nDEP&#x2F;W⊕X &#x2F; 跳转目标权限控制（⑥）DEP&#x2F;W⊕X能防御代码注入攻击。\nDEP无法防御ROP攻击。\nASLR &#x2F; 避免定位跳转目标（④）ASLR利用地址空间随机化技术避免攻击者定位恶意代码。\nASLR的代码地址由于低熵等原因仍可能被攻击者预测，同时信息泄露页能泄露ASLR之后的代码地址。\n研究方法及评价指标\n保护方案实用性评价指标保护能力一个保护技术的有效性取决于具体实施的策略（Enforced policy），体现在其所能防御的攻击，其精确度包括False negatives（漏报率）和False positives（误报率，实用环境中难以允许误报存在）。\n成本\n性能开销。性能开销增幅低于5%或10%的方案容易被广泛采用。性能测试除I&#x2F;O-bound benchmark外，更应关注（攻击所关注的）CPU-bound client-side benchmark。\n内存开销。其引入增长的元数据会造成内存开销，某些利用影子内存的防御机制会使内存开销翻倍。\n\n兼容性\n源代码级别兼容性（Source compatibility）。好的防御方案应不需要人工介入来调整源代码（移植或注释已有程序）\n二进制级别兼容性（Binary compatibility）。好的防御方案应当能直接兼容已有的二进制程序（已经编译的程序），这有利于推广部署。此外，有的库文件受完整性保护，不允许二进制代码修改。\n模块化支持（Modularity support）。由于动态库等模块非常重要，好的基于编译器的防御方案应当能独立编译并保护单独的模块，好的二进制重写保护方案应该支持单独加固单个二进制文件。\n\n保护方法现行的保护措施可以分两类：概率性保护，确定性保护。\n概率性防御方法基于随机化和加密技术，例如：\nInstruction Set Randomization(ISR)指令集随机化基本出发点是阻止恶意代码顺利完成攻击。在编译时对可执行程序的机器码进行加密操作，在指令执行前，再对每条加密过的指令进行解密。通过这个过程，使得攻击者植入的攻击代码不能完成预期的功能。\n指令随机化方法对于代码注入式攻击有很好的防御效果，但是由于使用虚拟机导致负荷过重，另外对数据流攻击无能为力(数据流攻击对象是并没有加密的数据)，所以又有了数据随机化（DSR）方法的诞生。其次非可执行页面权限的应用也可很好的防止shellcode注入。\nAddress Space Randomization(ASR)地址空间随机化 (ASR) 通过随机化代码和数据的位置以及潜在的有效负载地址来减轻控制流劫持攻击。\n地址空间布局随机化（Address Space Layout Randomization）技术是现在最表现突出的ASR技术。\n旨在通过随机化（堆、栈、代码段、库）避免间接跳转目标为攻击负载。如非全部代码数据段被随机化，ASR可能被绕过，实际应用中除库以外的模块往往未开启PIE（位置无关的可执行文件）以规避10%的性能损失。32位系统由于低熵难抵抗暴力攻击、去随机化（如堆喷射、JIT喷射）攻击和指针覆写，64位系统高熵ASR能被信息泄露绕过。\n由于W⊕X广泛部署，（可执行的）攻击负载几乎只能存在于代码段。对此，函数级别、指令级别的随机化被用于增加ROP（gadgets获取）难度（但对return-to-libc无效）。但信息泄露仍能轻易获取指令、gadget及函数的地址，从而导致ROP攻击成功。\nData Space Randomization(DSR)数据空间随机化 (DSR) 通过随机化（加密）内存内容（利用不同的密钥加密所有的变量，指针）的方式减轻所有类型攻击。\nDSR的方案的平均开销为15%，但不支持二进制兼容，不支持模块化处理。即使用了DSR技术的模块不能兼容未保护的模块。\n确定性防御方法Reference Monitor检查策略通过观察程序的执行，并在程序即将违反给定的安全策略时停止它。\n包括：\n\nHigh-level，例如在syscall层面施加的文件系统权限检查\nLow-level，例如内存安全及控制流完整性检查\n\nReference Monitor实现方式包括：\n\n硬件实现，开销低，但不能添加新功能。\n动态插桩（插桩指在目标程序嵌入代码）依靠动态二进制插桩技术，在运行过程中插桩检查代码，开销大\n静态插桩依靠编译器插桩及静态二进制重写技术，在生成目标程序时插桩检查代码，开销比动态插桩小，比基于硬件实现方案大\n\n内存安全策略对于完整的内存安全，必须防止出现空间和时间错误，并且不会出现误报现象。\n对于类型安全语言通过在数组访问时检查对象边界和使用自动垃圾收集（回收内存空间）来强制执行空间和时间安全。\n但是现实是，还有很多利用类型不安全语言写的代码在使用，下面的策略只要是利用引入lowlevel reference monitors保障内存安全。\n空间内存安全（边界检测）\n使用包含元数据的数据结构表示指针（fat-pointers）并进行边界检测会改变内存布局并使二进制程序难被兼容，而使用哈希表&#x2F;影子内存记录指针边界元数据的SoftBound方法的程序无法有效兼容不支持该扩展的库（库操作指针后无法更新元数据）（开销67%）。（在指针解引用时检查是否越界②）\n将对象边界用元数据表示（只在对象创建销毁时需要更新）并用于越界检测，其关键在于指针运算确保指针指向正确的对象（①）。该方法（BBC）有效兼容二进制库，可减少误报，但导致漏报。（开销60%以上）\n\n时间内存安全空间安全不能防御Use-after-free 和 double-free 漏洞\n\n使用特殊的动态内存分配器（Special allocators）让被释放的虚存只能被相同类型（及对齐）的对象使用，能一定程度避免时间内存安全破坏。（彻底拒绝虚存重用虽能避免UAF等攻击，但过于浪费。）\n\n基于对象的方法(Object based approaches)使用影子内存记录被释放内存能一定程度保障时间内存安全，但无法避免内存重新被分配使用后的时间安全问题。（类似基于对象的边界检查会记录对象元数据。动态转换器Valgrind造成10倍性能开销，编译时插桩方案AddressSanitizer造成73%性能开销）\n\n基于指针的方法如CETS在全局字典存储每个对象的有效性，并为每个对象分配唯一ID，所有指针与对象ID关联。该方法保护时间安全产生的开销为48%，联合SoftBound（保护空间安全）产生开销为116%。CETS与SoftBound难以有效兼容未受保护库(二进制兼容问题)。\n\n\n\n通用防御方法这类方法的策略（重在阻止攻击）弱于内存安全（重在检测攻击），无法抵抗信息泄露，但性能开销较低。通用体现在其着眼于所有数据（包括代码、指针）\n\n数据完整性保护如Young’s system能防御（如越界）写操作导致的数据破坏。利用影子内存标记不安全（可能越界）指针所指不安全对象（1代表不安全对象，0代表其它），在不安全指针写操作时基于影子内存中标记验证操作地址的确为不安全对象，避免破坏（写操作）不安全对象外的其它内存。缺点是不会检查读操作指针，还有一定的误报率（将敏感变量识别为不安全对象）。开销50%~100%。\n指向集合完整性保护(Integrity of points-to sets)如Write Integrity Testing（WIT，写操作完整性测试），基于源码指针分析，对每个指针及所指对象集合分配ID（对间接跳所用指针分配ID并在影子内存记录有效目标地址集合），杜绝写指针指向其对应集合外的地址。开销5%~25%。BinArmor基于动态跟踪指针指向集合（导致漏报、误报），使用二进制重写实施类似WIT的策略，开销180%。\n数据流完整性保护 对（如用于指定间接跳目标地址的）读操作指令利用可达指令集（the reaching definition sets）分析数据来源（哪些指令会写操作指定跳转地址），为合法指令指定集合并分配ID，并在读操作时检查目标地址由合法集内的指令赋予。开销50%~100%。\n\n控制流劫持防御代码指针完整性保护代码指针不被破坏（侧重于防篡改），控制流完整性检测被破坏的指针，共同抵御控制流劫持攻击。\n\n代码指针完整性保护（数据完整性子集）非常重要，但缺乏内存安全将无法有效提供保护,Global Offset Table(全局偏移表)、虚表中指针无需重写，设置只读即可有效保护。其它指针则不然，需要可写性，可被篡改用于控制流劫持。此外，恶意值（有别于指针）的加载（读）可劫持控制流（如UAF中加载新对象的虚表中指针）。\n控制流完整性保护\nDynamic return integrity。Canary&#x2F;Stack cookies通过在返回地址和局部变量之间放置一个秘密值检测stack smashing破坏栈帧中返回地址信息（开销不足1%，无兼容性问题）。影子栈使用（未受保护的）影子内存记录栈信息并在return前检查返回地址是否被篡改（开销5%，兼容性问题不大）。RAD保护影子栈安全，10倍开销。\n静态控制流图完整性。Abadi CFI构建静态控制流图保护函数调用和函数返回，在跳转目标处（代码完整性保护）标记ID（类似指向集合ID）确保跳转目标合法。W⊕X能助其避免伪造跳转目标（使用恶意数据地址冒充并标记ID）。针对return的静态先验目标集合包含过多目标，弱于影子栈实施动态调用栈。此外将所有指向集合合并的方法，无需指针分析便能记录所有函数地址，支持库的模块化转换和互换，但集合过大，建议采用影子栈保护。开销15%~45%，使用影子栈将额外造成10%开销。无法二进制兼容，W⊕X使其无法用于JIT场景。\n\n\n\n总结只有开销较低且兼容性强的方法才可能被广泛部署。除了基于指针的完全内存安全保护方案，其它方案均没有一个很好的健壮性支持。\n由于W⊕X的应用，后续研究更关注ROP攻击。随机化是当时（2013年）比较新颖的方法。但JIT的流行使W⊕X难以应用，（攻击者通过JIT提供恶意脚本）随机化方法也容易被轻易打败。更强的策略如DI、CFI需要被深入研究。\n作者建议学术界和工业界频繁交流，研究员基于开源平台设计新的防御方案~\n","categories":["刷题记录","BUUCTF","misc"]},{"title":"类-自定义数据类型","url":"/2022/10/29/%E7%B1%BB-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","content":"面向对象语言编程基于于对象类型相关的三个基本概念：封装性，多态性，继承性。\n面向对象的程序设计过程首先要确定解决问题需要哪些新的专用的数据类型，并把它定义为类，然后根据该问题的相关具体对象可以执行的操作编写程序。\n理解类定义类\npublic关键字决定后面那些成员的访问属性。将数据成员指定为public，意味着再包含这些成员的类对象的作用域内任意位置都可以访问它。\n还可将成员指定为 private 或 protected ，完全省略说明，默认访问属性是private。（结构体的类型为public）\n声明类的对象声明类的对象和声明结构体的方法完全相同。\n\n对象名box1表示整个对象，包括3个数据成员。对象的数据成员均没有初始化。\n访问类的数据成员可以利用直接成员选择操作符来引用类对象的数据成员。\n\n因为box2的数据成员的访问属性为public，所以在类外部的函数中只能以这种方式访问该数据成员。\n类的成员函数类的成员函数是其定义或原型在类定义内部的函数，它们可以处理本类的任何对象，有权访问本类的所有成员。\n\n注意，给类添加成员函数不会影响类对象的大小。\n成员函数定义的位置成员函数不一定要定义在类的内部。如果希望将其放在类外部定义，则需要将函数原型放在类的内部。\n\n因为实在类外部定义，所以要告诉编译器：该函数属于CBox类——即给函数名加上类名作为前缀，并用作用域解析运算符::(两个冒号)将二者分隔。\n这样写产生的于上面的输出是一致的，但两者不是同一个程序了。在类内部定义函数时，编译器会暗中将其当作内联函数对待。\n内联函数在内联函数中，编译器会设法以函数体代码代替函数调用，这样可以避免调用函数时大量的系统开销，加快运行。\n在函数定义位于类定义外部时，也可以告诉编译器将函数视为内联函数——即在函数头前面加上关键字 inline\n\n此时程序将于在类定义内的函数一样了。内联函数最适合用于短小精悍的简单程序。\n类构造函数构造函数的概念类的构造函数是类的特殊的函数，在创建新的类对象时调用它，因此，该函数提供了创建对象时进行初始化的机会。\n类可以有多个构造函数，以确保用不同的方式创建对象。\n命名类构造函数时，函数名总是于所属类的名称相同，构造函数没有任何的返回类型。例如：CBox的构造函数时CBox()。\n\n上面所示的构造函数CBox()有3个double类型的形参，分别可以对m_length,m_width,m_height赋初值。\n\n默认的构造函数默认的构造函数时不要求提供实参的函数，可以是没有指定任何形参的的构造函数，也可以是实参全部有默认值得构造函数。\n当我们没有定义构造函数时，编译器将提供默认的无实参构造函数。当我们定义的构造函数时，编译器将不再提供默认的构造函数。\n\n如果我们仍然希望声明没有初始化的CBox对象时，则必须自己添加默认构造函数。\n例如：\n\n默认的形参值我们可以在函数原型中给函数的形参指定默认值，同样也可以对类的成员函数（包括构造函数）这样做。\n例如：\n此时当我声明函数时就可以不带参数，但是此时就会和默认的构造函数冲突。\n\n编译器不知道应该调用那个构造函数。最好的办法就是去除默认的构造函数，此时任何未显式初始化的CBox对象的数据成员将自动初始化为1.\n在构造函数中使用初始化列表我们使用显式赋值语句在类构造函数中初始化对象成员时，还可以用另一种技术——初始化列表。\n\n这样的初始化方式要比用赋值语句效率高。并且这是给对象的某些类型的数据成员赋值的唯一方法。\n构造函数的初始话列表于形参列表之间要用冒号隔开，各个初始化的成员之间以逗号隔开。\n声明显示的构造函数现在的编译器很智能帮助简化了很多事，当我们定义了一个具有单一形量的构造函数，在使用此函数时有时就会出现隐式转化，而有时我们不希望出现隐式转化。\n例如：\n创建这样一个构造函数，只有一个形参。再考虑下面这段代码：\n\n这段代码中，调用构造函数CBox(double)创建类box，并将其赋值，此时值99要从类型double到CBox的隐式转换。有时我们并不想出现这种隐式转换情况。\n此时我们就可有在构造函数的定义中使用explicit(显式的)关键字来阻止这种情况。\n\n构造函数声明为explicit，则只能显示的调用它，且不用于隐式转换。\n此时要想把对象的成员赋值，只能这样写：\n\n这不是转换，而是显示的调用了含单一形参的构造函数。\n还一种不希望出现隐式转换的。一个构造函数，有多个形参且都有默认值。前面出现过的：\n\n因为第二第三个形参有默认值，所以下面代码可以执行：\n\n这一次是隐式调用构造函数，第一参数会被赋值为99.0，其他两个实参值是默认值。这也不是我们所期望的。为了防止这种情况，我们要显式声明构造函数。\n类的私有成员在定义类成员时使用关键字private，此时的类成员只有类的成员函数可以访问。\n\n现在，3个数据成员只能被本类的尘缘函数访问。\n此时在main函数中在想直接对类的数据成员赋值或使用，编译器将报错。\n要注意，现在使用构造函数时唯一一种给数据成员赋值的方法。\n同样的，成员函数也可以被private修饰，这种情况下，它只能被其他函数成员调用。\n访问私有类成员我们使用private关键字确实很好的保护了类成员，但是也不利于我们使用类成员。\n因此我们要编写一个返回数据成员值得成员函数即可。\n\n当我们需要数据成员时\n\n这样既可以访问这些成员的值，又不会危害类的安全性。\n类的友元函数有时候由于某种原因，我们希望某些虽然不是类成员得函数能够能够访问类的所有成员——拥有特殊的权限。\n这样的函数被称为类的友元函数，使用关键字friend来定义。可以在类定义中添加友元函数的原型，也可以添加整个函数的定义。在类定义内的友元函数也是内联函数。\n注意，友元函数并不是类的成员，因此访问特性不适合它。这些函数知识拥有特殊权利的普通全局函数。\n\n","categories":["刷题记录","BUUCTF","misc"]}]